{"version":3,"file":"pager.component.d.ts","sources":["pager.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DataSource } from '../../lib/data-source/data-source';\nexport declare class PagerComponent implements OnChanges {\n    source: DataSource;\n    perPageSelect: any[];\n    changePage: EventEmitter<any>;\n    currentPerPage: any;\n    protected pages: Array<any>;\n    protected page: number;\n    protected count: number;\n    protected perPage: number;\n    protected dataChangedSub: Subscription;\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes: any): void;\n    shouldShow(): boolean;\n    paginate(page: number): boolean;\n    next(): boolean;\n    prev(): boolean;\n    getPage(): number;\n    getPages(): Array<any>;\n    getLast(): number;\n    isPageOutOfBounce(): boolean;\n    initPages(): void;\n    onChangePerPage(event: any): void;\n}\n"]}