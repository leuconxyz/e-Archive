{"version":3,"file":"token.service.d.ts","sources":["token.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable, BehaviorSubject } from 'rxjs';\nimport { NbTokenStorage } from './token-storage';\nimport { NbAuthToken } from './token';\n/**\n * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.\n */\nexport declare class NbTokenService {\n    protected tokenStorage: NbTokenStorage;\n    protected token$: BehaviorSubject<NbAuthToken>;\n    constructor(tokenStorage: NbTokenStorage);\n    /**\n     * Publishes token when it changes.\n     * @returns {Observable<NbAuthToken>}\n     */\n    tokenChange(): Observable<NbAuthToken>;\n    /**\n     * Sets a token into the storage. This method is used by the NbAuthService automatically.\n     *\n     * @param {NbAuthToken} token\n     * @returns {Observable<any>}\n     */\n    set(token: NbAuthToken): Observable<null>;\n    /**\n     * Returns observable of current token\n     * @returns {Observable<NbAuthToken>}\n     */\n    get(): Observable<NbAuthToken>;\n    /**\n     * Removes the token and published token value\n     *\n     * @returns {Observable<any>}\n     */\n    clear(): Observable<null>;\n    protected publishStoredToken(): void;\n}\n"]}