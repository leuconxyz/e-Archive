{"version":3,"file":"form-field.component.d.ts","sources":["form-field.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { AfterContentChecked, ChangeDetectorRef, QueryList, AfterContentInit, OnDestroy, NgZone, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject, Observable, ReplaySubject } from 'rxjs';\nimport { NbPrefixDirective } from './prefix.directive';\nimport { NbSuffixDirective } from './suffix.directive';\nimport { NbFormFieldControl, NbFormControlState, NbFormFieldControlConfig } from './form-field-control';\nexport declare type NbFormControlAddon = 'prefix' | 'suffix';\nexport declare class NbFormFieldComponent implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n    protected cd: ChangeDetectorRef;\n    protected zone: NgZone;\n    protected elementRef: ElementRef;\n    protected renderer: Renderer2;\n    protected readonly destroy$: Subject<void>;\n    protected formControlState$: ReplaySubject<NbFormControlState>;\n    prefixClasses$: Observable<string[]>;\n    suffixClasses$: Observable<string[]>;\n    prefix: QueryList<NbPrefixDirective>;\n    suffix: QueryList<NbSuffixDirective>;\n    formControl: NbFormFieldControl;\n    formControlConfig: NbFormFieldControlConfig;\n    formFieldClasses: any;\n    constructor(cd: ChangeDetectorRef, zone: NgZone, elementRef: ElementRef, renderer: Renderer2);\n    ngAfterContentChecked(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    shouldShowPrefix(): boolean;\n    shouldShowSuffix(): boolean;\n    protected subscribeToFormControlStateChange(): void;\n    protected subscribeToAddonChange(): void;\n    protected getAddonClasses(addon: NbFormControlAddon, state: NbFormControlState): string[];\n    protected getFormControlConfig(): NbFormFieldControlConfig;\n    protected isStatesEqual(oldState: NbFormControlState, state: NbFormControlState): boolean;\n}\n"]}