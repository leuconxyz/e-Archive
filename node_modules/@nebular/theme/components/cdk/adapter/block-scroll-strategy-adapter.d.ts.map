{"version":3,"file":"block-scroll-strategy-adapter.d.ts","sources":["block-scroll-strategy-adapter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { BlockScrollStrategy, ScrollDispatcher, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { NbLayoutScrollService } from '../../../services/scroll.service';\nimport { NbViewportRulerAdapter } from './viewport-ruler-adapter';\n/**\n * Overrides default block scroll strategy because default strategy blocks scrolling on the body only.\n * But Nebular has its own scrollable container - nb-layout. So, we need to block scrolling in it to.\n * */\nexport declare class NbBlockScrollStrategyAdapter extends BlockScrollStrategy {\n    protected scrollService: NbLayoutScrollService;\n    constructor(document: any, viewportRuler: NbViewportRulerAdapter, scrollService: NbLayoutScrollService);\n    enable(): void;\n    disable(): void;\n}\nexport declare class NbScrollStrategyOptions extends ScrollStrategyOptions {\n    protected scrollService: NbLayoutScrollService;\n    protected scrollDispatcher: ScrollDispatcher;\n    protected viewportRuler: NbViewportRulerAdapter;\n    protected ngZone: NgZone;\n    protected document: any;\n    constructor(scrollService: NbLayoutScrollService, scrollDispatcher: ScrollDispatcher, viewportRuler: NbViewportRulerAdapter, ngZone: NgZone, document: any);\n    block: () => NbBlockScrollStrategyAdapter;\n}\nexport declare type NbScrollStrategies = keyof Pick<NbScrollStrategyOptions, 'noop' | 'close' | 'block' | 'reposition'>;\n"]}