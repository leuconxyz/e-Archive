{"version":3,"file":"dynamic-overlay-handler.d.ts","sources":["dynamic-overlay-handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, SimpleChange, Type } from '@angular/core';\nimport { NbTrigger, NbTriggerStrategy, NbTriggerStrategyBuilderService } from '../overlay-trigger';\nimport { NbAdjustableConnectedPositionStrategy, NbAdjustment, NbPosition, NbPositionBuilderService } from '../overlay-position';\nimport { NbRenderableContainer } from '../overlay-container';\nimport { NbOverlayContent } from '../overlay-service';\nimport { NbDynamicOverlay } from './dynamic-overlay';\nimport { NbOverlayConfig } from '../mapping';\nexport declare class NbDynamicOverlayChange extends SimpleChange {\n    constructor(previousValue: any, currentValue: any, firstChange?: boolean);\n    isChanged(): boolean;\n}\nexport declare class NbDynamicOverlayHandler {\n    private positionBuilder;\n    private triggerStrategyBuilder;\n    private dynamicOverlayService;\n    protected _componentType: Type<NbRenderableContainer>;\n    protected _host: ElementRef;\n    protected _context: Object;\n    protected _content: NbOverlayContent;\n    protected _trigger: NbTrigger;\n    protected _position: NbPosition;\n    protected _adjustment: NbAdjustment;\n    protected _offset: number;\n    protected _overlayConfig: NbOverlayConfig;\n    protected dynamicOverlay: NbDynamicOverlay;\n    protected triggerStrategy: NbTriggerStrategy;\n    protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n    protected changes: {\n        [key: string]: NbDynamicOverlayChange;\n    };\n    constructor(positionBuilder: NbPositionBuilderService, triggerStrategyBuilder: NbTriggerStrategyBuilderService, dynamicOverlayService: NbDynamicOverlay);\n    host(host: ElementRef): this;\n    trigger(trigger: NbTrigger): this;\n    position(position: NbPosition): this;\n    adjustment(adjustment: NbAdjustment): this;\n    componentType(componentType: Type<NbRenderableContainer>): this;\n    content(content: NbOverlayContent): this;\n    context(context: {}): this;\n    offset(offset: number): this;\n    overlayConfig(overlayConfig: NbOverlayConfig): this;\n    build(): NbDynamicOverlay;\n    rebuild(): NbDynamicOverlay;\n    connect(): void;\n    disconnect(): void;\n    destroy(): void;\n    protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy;\n    protected subscribeOnTriggers(dynamicOverlay: NbDynamicOverlay): void;\n    protected isContainerRerenderRequired(): boolean;\n    protected isPositionStrategyUpdateRequired(): boolean;\n    protected isTriggerStrategyUpdateRequired(): boolean;\n    protected isComponentTypeUpdateRequired(): boolean;\n    private isOverlayConfigUpdateRequired;\n    protected isComponentTypeUpdated(): boolean;\n    protected isContentUpdated(): boolean;\n    protected isContextUpdated(): boolean;\n    protected isAdjustmentUpdated(): boolean;\n    protected isPositionUpdated(): boolean;\n    protected isHostUpdated(): boolean;\n    protected isTriggerUpdated(): boolean;\n    protected isOffsetUpdated(): boolean;\n    protected isOverlayConfigUpdated(): boolean;\n    protected clearChanges(): void;\n}\n"]}