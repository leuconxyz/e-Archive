{"version":3,"file":"mapping.d.ts","sources":["mapping.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;AACA;;;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["import { ModuleWithProviders, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { CdkPortal, CdkPortalOutlet, ComponentPortal, Portal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { ComponentType, ConnectedOverlayPositionChange, ConnectedPosition, ConnectionPositionPair, FlexibleConnectedPositionStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayPositionBuilder, OverlayRef, PositionStrategy, ScrollStrategy } from '@angular/cdk/overlay';\nimport { NbScrollStrategyOptions } from '../adapter/block-scroll-strategy-adapter';\nexport declare class NbPortalDirective extends CdkPortal {\n}\nexport declare class NbPortalOutletDirective extends CdkPortalOutlet {\n}\nexport declare class NbComponentPortal<T = any> extends ComponentPortal<T> {\n}\nexport declare class NbOverlay extends Overlay {\n    scrollStrategies: NbScrollStrategyOptions;\n}\nexport declare class NbOverlayPositionBuilder extends OverlayPositionBuilder {\n}\nexport declare class NbTemplatePortal<T = any> extends TemplatePortal<T> {\n    constructor(template: TemplateRef<T>, viewContainerRef?: ViewContainerRef, context?: T);\n}\nexport declare class NbOverlayContainer extends OverlayContainer {\n}\nexport declare class NbFlexibleConnectedPositionStrategy extends FlexibleConnectedPositionStrategy {\n}\nexport declare class NbPortalInjector extends PortalInjector {\n}\nexport declare type NbPortal<T = any> = Portal<T>;\nexport declare type NbOverlayRef = OverlayRef;\nexport declare type NbComponentType<T = any> = ComponentType<T>;\nexport declare type NbPositionStrategy = PositionStrategy;\nexport declare type NbConnectedPosition = ConnectedPosition;\nexport declare type NbConnectedOverlayPositionChange = ConnectedOverlayPositionChange;\nexport declare type NbConnectionPositionPair = ConnectionPositionPair;\nexport declare type NbOverlayConfig = OverlayConfig;\nexport declare type NbScrollStrategy = ScrollStrategy;\n/**\n * This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.\n * Approach will help us move cdk in separate npm package and refactor nebular/theme code.\n * */\nexport declare class NbCdkMappingModule {\n    static forRoot(): ModuleWithProviders<NbCdkMappingModule>;\n}\n"]}