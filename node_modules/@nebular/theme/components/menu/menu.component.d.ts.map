{"version":3,"file":"menu.component.d.ts","sources":["menu.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { EventEmitter, OnInit, OnDestroy, AfterViewInit, DoCheck } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { NbMenuInternalService, NbMenuItem, NbMenuService, NbMenuBadgeConfig } from './menu.service';\nimport { NbBooleanInput } from '../helpers';\nimport { NbLayoutDirectionService } from '../../services/direction.service';\nexport declare enum NbToggleStates {\n    Expanded = \"expanded\",\n    Collapsed = \"collapsed\"\n}\nexport declare class NbMenuItemComponent implements DoCheck, AfterViewInit, OnDestroy {\n    protected menuService: NbMenuService;\n    protected directionService: NbLayoutDirectionService;\n    menuItem: NbMenuItem;\n    badge: NbMenuBadgeConfig;\n    hoverItem: EventEmitter<any>;\n    toggleSubMenu: EventEmitter<any>;\n    selectItem: EventEmitter<any>;\n    itemClick: EventEmitter<any>;\n    protected destroy$: Subject<void>;\n    toggleState: NbToggleStates;\n    constructor(menuService: NbMenuService, directionService: NbLayoutDirectionService);\n    ngDoCheck(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    onToggleSubMenu(item: NbMenuItem): void;\n    onHoverItem(item: NbMenuItem): void;\n    onSelectItem(item: NbMenuItem): void;\n    onItemClick(item: NbMenuItem): void;\n    getExpandStateIcon(): string;\n}\n/**\n * Vertical menu component.\n *\n * Accepts a list of menu items and renders them accordingly. Supports multi-level menus.\n *\n * Basic example\n * @stacked-example(Showcase, menu/menu-showcase.component)\n *\n * ```ts\n * // ...\n * items: NbMenuItem[] = [\n *  {\n *    title: home,\n *    link: '/'\n *  },\n *  {\n *    title: dashboard,\n *    link: 'dashboard'\n *  }\n * ];\n * // ...\n * <nb-menu [items]=\"items\"></nb-menu>\n * ```\n * ### Installation\n *\n * Import `NbMenuModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbMenuModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * and `NbMenuModule` to your feature module where the component should be shown:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbMenuModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Two-level menu example\n * @stacked-example(Two Levels, menu/menu-children.component)\n *\n *\n * Autocollapse menu example\n * @stacked-example(Autocollapse Menu, menu/menu-autocollapse.component)\n *\n * Menu badge\n * @stacked-example(Menu item badge, menu/menu-badge.component)\n *\n * @styles\n *\n * menu-background-color:\n * menu-text-color:\n * menu-text-font-family:\n * menu-text-font-size:\n * menu-text-font-weight:\n * menu-text-line-height:\n * menu-group-text-color:\n * menu-item-border-radius:\n * menu-item-padding:\n * menu-item-hover-background-color:\n * menu-item-hover-cursor:\n * menu-item-hover-text-color:\n * menu-item-icon-hover-color:\n * menu-item-active-background-color:\n * menu-item-active-text-color:\n * menu-item-icon-active-color:\n * menu-item-icon-color:\n * menu-item-icon-margin:\n * menu-item-icon-width:\n * menu-item-divider-color:\n * menu-item-divider-style:\n * menu-item-divider-width:\n * menu-submenu-background-color:\n * menu-submenu-text-color:\n * menu-submenu-margin:\n * menu-submenu-padding:\n * menu-submenu-item-border-color:\n * menu-submenu-item-border-style:\n * menu-submenu-item-border-width:\n * menu-submenu-item-border-radius:\n * menu-submenu-item-padding:\n * menu-submenu-item-hover-background-color:\n * menu-submenu-item-hover-border-color:\n * menu-submenu-item-hover-text-color:\n * menu-submenu-item-icon-hover-color:\n * menu-submenu-item-active-background-color:\n * menu-submenu-item-active-border-color:\n * menu-submenu-item-active-text-color:\n * menu-submenu-item-icon-active-color:\n * menu-submenu-item-active-hover-background-color:\n * menu-submenu-item-active-hover-border-color:\n * menu-submenu-item-active-hover-text-color:\n * menu-submenu-item-icon-active-hover-color:\n */\nexport declare class NbMenuComponent implements OnInit, AfterViewInit, OnDestroy {\n    protected window: any;\n    protected platformId: any;\n    protected menuInternalService: NbMenuInternalService;\n    protected router: Router;\n    /**\n     * Tags a menu with some ID, can be later used in the menu service\n     * to determine which menu triggered the action, if multiple menus exist on the page.\n     *\n     * @type {string}\n     */\n    tag: string;\n    /**\n     * List of menu items.\n     * @type List<NbMenuItem> | List<any> | any\n     */\n    items: NbMenuItem[];\n    /**\n     * Collapse all opened submenus on the toggle event\n     * Default value is \"false\"\n     * @type boolean\n     */\n    get autoCollapse(): boolean;\n    set autoCollapse(value: boolean);\n    protected _autoCollapse: boolean;\n    static ngAcceptInputType_autoCollapse: NbBooleanInput;\n    protected destroy$: Subject<void>;\n    constructor(window: any, platformId: any, menuInternalService: NbMenuInternalService, router: Router);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    onAddItem(data: {\n        tag: string;\n        items: NbMenuItem[];\n    }): void;\n    onHoverItem(item: NbMenuItem): void;\n    onToggleSubMenu(item: NbMenuItem): void;\n    onSelectItem(item: NbMenuItem): void;\n    onItemClick(item: NbMenuItem): void;\n    ngOnDestroy(): void;\n    protected navigateHome(): void;\n    protected collapseAll(): void;\n    protected getHomeItem(items: NbMenuItem[]): NbMenuItem;\n    protected compareTag(tag: string): boolean;\n    protected getSelectedItem(items: NbMenuItem[]): NbMenuItem;\n}\n"]}