{"version":3,"file":"input.directive.d.ts","sources":["input.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { OnDestroy, OnInit, ElementRef, SimpleChanges, OnChanges, DoCheck, AfterViewInit, Renderer2, NgZone } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { NbStatusService } from '../../services/status.service';\nimport { NbBooleanInput } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentShape } from '../component-shape';\nimport { NbComponentOrCustomStatus } from '../component-status';\nimport { NbFormFieldControl } from '../form-field/form-field-control';\nimport { NbFocusMonitor } from '../cdk/a11y/a11y.module';\n/**\n * Basic input directive.\n *\n * ```html\n * <input nbInput></input>\n * ```\n *\n * ### Installation\n *\n * Import `NbInputModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbInputModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Default input size is `medium`:\n * @stacked-example(Showcase, input/input-showcase.component)\n *\n * Inputs are available in multiple colors using `status` property:\n * @stacked-example(Input Colors, input/input-colors.component)\n *\n * There are three input sizes:\n *\n * @stacked-example(Input Sizes, input/input-sizes.component)\n *\n * Inputs available in different shapes, which could be combined with the other properties:\n * @stacked-example(Input Shapes, input/input-shapes.component)\n *\n * `nbInput` could be applied to the following selectors - `input`, `textarea`:\n * @stacked-example(Input Elements, input/input-types.component)\n *\n * You can add `fullWidth` attribute to make element fill container:\n * @stacked-example(Full width inputs, input/input-full-width.component)\n *\n * Or you can bind control with form controls or ngModel:\n * @stacked-example(Input form binding, input/input-form.component)\n *\n * Use `<nb-form-field>` to add custom content to the input field.\n * First import `NbFormFieldModule`. Then put the input field and custom content into\n * `<nb-form-field>` and add `nbPrefix` or `nbSuffix` directive to the custom content.\n * `nbPrefix` puts content before input and `nbSuffix` after.\n *\n * @stacked-example(Input with icon, form-field/form-field-input.component)\n * @stacked-example(Input with button, form-field/form-field-password.component)\n *\n * @styles\n *\n * input-border-style:\n * input-border-width:\n * input-outline-color:\n * input-outline-width:\n * input-placeholder-text-font-family:\n * input-text-font-family:\n * input-basic-text-color:\n * input-basic-placeholder-text-color:\n * input-basic-background-color:\n * input-basic-border-color:\n * input-basic-focus-background-color:\n * input-basic-focus-border-color:\n * input-basic-hover-background-color:\n * input-basic-hover-border-color:\n * input-basic-disabled-background-color:\n * input-basic-disabled-border-color:\n * input-basic-disabled-text-color:\n * input-basic-disabled-placeholder-text-color:\n * input-primary-text-color:\n * input-primary-placeholder-text-color:\n * input-primary-background-color:\n * input-primary-border-color:\n * input-primary-focus-background-color:\n * input-primary-focus-border-color:\n * input-primary-hover-background-color:\n * input-primary-hover-border-color:\n * input-primary-disabled-background-color:\n * input-primary-disabled-border-color:\n * input-primary-disabled-text-color:\n * input-primary-disabled-placeholder-text-color:\n * input-success-text-color:\n * input-success-placeholder-text-color:\n * input-success-background-color:\n * input-success-border-color:\n * input-success-focus-background-color:\n * input-success-focus-border-color:\n * input-success-hover-background-color:\n * input-success-hover-border-color:\n * input-success-disabled-background-color:\n * input-success-disabled-border-color:\n * input-success-disabled-text-color:\n * input-success-disabled-placeholder-text-color:\n * input-info-text-color:\n * input-info-placeholder-text-color:\n * input-info-background-color:\n * input-info-border-color:\n * input-info-focus-background-color:\n * input-info-focus-border-color:\n * input-info-hover-background-color:\n * input-info-hover-border-color:\n * input-info-disabled-background-color:\n * input-info-disabled-border-color:\n * input-info-disabled-text-color:\n * input-info-disabled-placeholder-text-color:\n * input-warning-text-color:\n * input-warning-placeholder-text-color:\n * input-warning-background-color:\n * input-warning-border-color:\n * input-warning-focus-background-color:\n * input-warning-focus-border-color:\n * input-warning-hover-background-color:\n * input-warning-hover-border-color:\n * input-warning-disabled-background-color:\n * input-warning-disabled-border-color:\n * input-warning-disabled-text-color:\n * input-warning-disabled-placeholder-text-color:\n * input-danger-text-color:\n * input-danger-placeholder-text-color:\n * input-danger-background-color:\n * input-danger-border-color:\n * input-danger-focus-background-color:\n * input-danger-focus-border-color:\n * input-danger-hover-background-color:\n * input-danger-hover-border-color:\n * input-danger-disabled-background-color:\n * input-danger-disabled-border-color:\n * input-danger-disabled-text-color:\n * input-danger-disabled-placeholder-text-color:\n * input-control-text-color:\n * input-control-placeholder-text-color:\n * input-control-background-color:\n * input-control-border-color:\n * input-control-focus-background-color:\n * input-control-focus-border-color:\n * input-control-hover-background-color:\n * input-control-hover-border-color:\n * input-control-disabled-background-color:\n * input-control-disabled-border-color:\n * input-control-disabled-text-color:\n * input-control-disabled-placeholder-text-color:\n * input-rectangle-border-radius:\n * input-semi-round-border-radius:\n * input-round-border-radius:\n * input-tiny-text-font-size:\n * input-tiny-text-font-weight:\n * input-tiny-text-line-height:\n * input-tiny-placeholder-text-font-size:\n * input-tiny-placeholder-text-font-weight:\n * input-tiny-placeholder-text-line-height:\n * input-tiny-padding:\n * input-tiny-max-width:\n * input-small-text-font-size:\n * input-small-text-font-weight:\n * input-small-text-line-height:\n * input-small-placeholder-text-font-size:\n * input-small-placeholder-text-font-weight:\n * input-small-placeholder-text-line-height:\n * input-small-padding:\n * input-small-max-width:\n * input-medium-text-font-size:\n * input-medium-text-font-weight:\n * input-medium-text-line-height:\n * input-medium-placeholder-text-font-size:\n * input-medium-placeholder-text-font-weight:\n * input-medium-placeholder-text-line-height:\n * input-medium-padding:\n * input-medium-max-width:\n * input-large-text-font-size:\n * input-large-text-font-weight:\n * input-large-text-line-height:\n * input-large-placeholder-text-font-size:\n * input-large-placeholder-text-font-weight:\n * input-large-placeholder-text-line-height:\n * input-large-padding:\n * input-large-max-width:\n * input-giant-text-font-size:\n * input-giant-text-font-weight:\n * input-giant-text-line-height:\n * input-giant-placeholder-text-font-size:\n * input-giant-placeholder-text-font-weight:\n * input-giant-placeholder-text-line-height:\n * input-giant-padding:\n * input-giant-max-width:\n */\nexport declare class NbInputDirective implements DoCheck, OnChanges, OnInit, AfterViewInit, OnDestroy, NbFormFieldControl {\n    protected elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>;\n    protected focusMonitor: NbFocusMonitor;\n    protected renderer: Renderer2;\n    protected zone: NgZone;\n    protected statusService: NbStatusService;\n    protected destroy$: Subject<void>;\n    /**\n     * Field size modifications. Possible values: `small`, `medium` (default), `large`.\n     */\n    fieldSize: NbComponentSize;\n    /**\n     * Field status (adds specific styles):\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n     */\n    status: NbComponentOrCustomStatus;\n    /**\n     * Field shapes modifications. Possible values: `rectangle` (default), `round`, `semi-round`.\n     */\n    shape: NbComponentShape;\n    /**\n     * If set element will fill container. `false` by default.\n     */\n    get fullWidth(): boolean;\n    set fullWidth(value: boolean);\n    private _fullWidth;\n    static ngAcceptInputType_fullWidth: NbBooleanInput;\n    get additionalClasses(): string[];\n    constructor(elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>, focusMonitor: NbFocusMonitor, renderer: Renderer2, zone: NgZone, statusService: NbStatusService);\n    ngDoCheck(): void;\n    ngOnChanges({ status, fieldSize, fullWidth }: SimpleChanges): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    get tiny(): boolean;\n    get small(): boolean;\n    get medium(): boolean;\n    get large(): boolean;\n    get giant(): boolean;\n    get primary(): boolean;\n    get info(): boolean;\n    get success(): boolean;\n    get warning(): boolean;\n    get danger(): boolean;\n    get basic(): boolean;\n    get control(): boolean;\n    get rectangle(): boolean;\n    get semiRound(): boolean;\n    get round(): boolean;\n    status$: BehaviorSubject<string>;\n    size$: BehaviorSubject<NbComponentSize>;\n    focused$: BehaviorSubject<boolean>;\n    disabled$: BehaviorSubject<boolean>;\n    fullWidth$: BehaviorSubject<boolean>;\n}\n"]}