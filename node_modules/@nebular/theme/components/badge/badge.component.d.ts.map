{"version":3,"file":"badge.component.d.ts","sources":["badge.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { NbStatusService } from '../../services/status.service';\nimport { NbComponentOrCustomStatus } from '../component-status';\nexport declare type NbBadgePhysicalPosition = 'top left' | 'top right' | 'bottom left' | 'bottom right' | 'center right' | 'center left';\nexport declare type NbBadgeLogicalPosition = 'top start' | 'top end' | 'bottom start' | 'bottom end' | 'center start' | 'center end';\nexport declare type NbBadgePosition = NbBadgePhysicalPosition | NbBadgeLogicalPosition;\nexport interface NbBadge {\n    text?: string;\n    position?: NbBadgePosition;\n    status?: NbComponentOrCustomStatus;\n    dotMode?: boolean;\n}\n/**\n * Badge is a simple labeling component.\n * It can be used to add additional information to any content or highlight unread items.\n *\n * Element is absolute positioned, so parent should be\n * [positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).\n * It means parent `position` should be set to anything except `static`, e.g. `relative`,\n * `absolute`, `fixed`, or `sticky`.\n *\n * ### Installation\n *\n * Import `NbBadgeModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbBadgeModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Badge with default position and status(color):\n *\n * ```html\n * <nb-badge text=\"badgeText\"></nb-badge>\n * ```\n *\n * For example, badge can be placed into nb-card header:\n * @stacked-example(Showcase, badge/badge-showcase.component)\n *\n * Badge located on the bottom right with warning status:\n *\n * ```html\n * <nb-badge text=\"badgeText\" status=\"warning\" position=\"bottom right\">\n * </nb-badge>\n * ```\n *\n * @styles\n *\n * badge-border-radius:\n * badge-text-font-family:\n * badge-text-font-size:\n * badge-text-font-weight:\n * badge-text-line-height:\n * badge-padding:\n * badge-basic-background-color:\n * badge-basic-text-color:\n * badge-primary-background-color:\n * badge-primary-text-color:\n * badge-success-background-color:\n * badge-success-text-color:\n * badge-info-background-color:\n * badge-info-text-color:\n * badge-warning-background-color:\n * badge-warning-text-color:\n * badge-danger-background-color:\n * badge-danger-text-color:\n * badge-control-background-color:\n * badge-control-text-color:\n */\nexport declare class NbBadgeComponent implements NbBadge {\n    protected statusService: NbStatusService;\n    /**\n     * Text to display\n     * @type string\n     */\n    text: string;\n    /**\n     * Badge position\n     *\n     * Can be set to any class or to one of predefined positions:\n     * 'top left', 'top right', 'bottom left', 'bottom right',\n     * 'top start', 'top end', 'bottom start', 'bottom end'\n     * @type string\n     */\n    get position(): NbBadgePosition;\n    set position(value: NbBadgePosition);\n    protected _defaultPosition: NbBadgePosition;\n    protected _position: NbBadgePosition;\n    /**\n     * Shows badge as a dot. No text is shown.\n     * @type boolean\n     */\n    get dotMode(): boolean;\n    set dotMode(value: boolean);\n    protected _dotMode: boolean;\n    /**\n     * Badge status (adds specific styles):\n     * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'\n     */\n    status: NbComponentOrCustomStatus;\n    get additionalClasses(): string[];\n    get primary(): boolean;\n    get success(): boolean;\n    get info(): boolean;\n    get warning(): boolean;\n    get danger(): boolean;\n    get basic(): boolean;\n    get control(): boolean;\n    get top(): boolean;\n    get right(): boolean;\n    get bottom(): boolean;\n    get left(): boolean;\n    get start(): boolean;\n    get end(): boolean;\n    get center(): boolean;\n    constructor(statusService: NbStatusService);\n}\n"]}