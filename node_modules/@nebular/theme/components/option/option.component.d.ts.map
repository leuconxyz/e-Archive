{"version":3,"file":"option.component.d.ts","sources":["option.component.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, AfterViewInit, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NbBooleanInput } from '../helpers';\nimport { NbFocusableOption } from '../cdk/a11y/focus-key-manager';\nimport { NbHighlightableOption } from '../cdk/a11y/descendant-key-manager';\nimport { NbSelectComponent } from '../select/select.component';\n/**\n * NbOptionComponent\n *\n * @styles\n *\n * option-background-color:\n * option-text-color:\n * option-text-font-family:\n * option-hover-background-color:\n * option-hover-text-color:\n * option-active-background-color:\n * option-active-text-color:\n * option-focus-background-color:\n * option-focus-text-color:\n * option-selected-background-color:\n * option-selected-text-color:\n * option-selected-hover-background-color:\n * option-selected-hover-text-color:\n * option-selected-active-background-color:\n * option-selected-active-text-color:\n * option-selected-focus-background-color:\n * option-selected-focus-text-color:\n * option-disabled-background-color:\n * option-disabled-text-color:\n * option-tiny-text-font-size:\n * option-tiny-text-font-weight:\n * option-tiny-text-line-height:\n * option-tiny-padding:\n * option-small-text-font-size:\n * option-small-text-font-weight:\n * option-small-text-line-height:\n * option-small-padding:\n * option-medium-text-font-size:\n * option-medium-text-font-weight:\n * option-medium-text-line-height:\n * option-medium-padding:\n * option-large-text-font-size:\n * option-large-text-font-weight:\n * option-large-text-line-height:\n * option-large-padding:\n * option-giant-text-font-size:\n * option-giant-text-font-weight:\n * option-giant-text-line-height:\n * option-giant-padding:\n **/\nexport declare class NbOptionComponent<T = any> implements OnDestroy, AfterViewInit, NbFocusableOption, NbHighlightableOption {\n    protected elementRef: ElementRef;\n    protected cd: ChangeDetectorRef;\n    protected zone: NgZone;\n    protected renderer: Renderer2;\n    protected disabledByGroup: boolean;\n    /**\n     * Option value that will be fired on selection.\n     * */\n    value: T;\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    protected _disabled: boolean;\n    static ngAcceptInputType_disabled: NbBooleanInput;\n    /**\n     * Fires value when option selection change.\n     * */\n    selectionChange: EventEmitter<NbOptionComponent<T>>;\n    /**\n     * Fires when option clicked\n     */\n    protected click$: Subject<NbOptionComponent<T>>;\n    get click(): Observable<NbOptionComponent<T>>;\n    selected: boolean;\n    protected parent: NbSelectComponent;\n    protected alive: boolean;\n    /**\n     * Component scoped id for aria attributes.\n     * */\n    id: string;\n    constructor(parent: any, elementRef: ElementRef, cd: ChangeDetectorRef, zone: NgZone, renderer: Renderer2);\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    /**\n     * Determines should we render checkbox.\n     * */\n    get withCheckbox(): boolean;\n    get content(): any;\n    get multiple(): boolean;\n    get selectedClass(): boolean;\n    get disabledAttribute(): '' | null;\n    get tabindex(): string;\n    get activeClass(): boolean;\n    protected _active: boolean;\n    onClick(event: any): void;\n    select(): void;\n    deselect(): void;\n    /**\n     * Sets disabled by group state and marks component for check.\n     */\n    setDisabledByGroupState(disabled: boolean): void;\n    protected setSelection(selected: boolean): void;\n    focus(): void;\n    getLabel(): string;\n    setActiveStyles(): void;\n    setInactiveStyles(): void;\n}\n"]}