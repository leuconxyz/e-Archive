{"version":3,"file":"alert.component.d.ts","sources":["alert.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { EventEmitter } from '@angular/core';\nimport { NbStatusService } from '../../services/status.service';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentOrCustomStatus, NbComponentStatus } from '../component-status';\nimport { NbBooleanInput } from '../helpers';\n/**\n * Alert component.\n *\n * Basic alert example:\n * @stacked-example(Showcase, alert/alert-showcase.component)\n *\n * Alert configuration:\n *\n * ```html\n * <nb-alert status=\"success\">\n *   You have been successfully authenticated!\n * </nb-alert>\n * ```\n * ### Installation\n *\n * Import `NbAlertModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbAlertModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Alert could additionally have a `close` button when `closable` property is set:\n * ```html\n * <nb-alert status=\"success\" closable (close)=\"onClose()\">\n *   You have been successfully authenticated!\n * </nb-alert>\n * ```\n *\n * Colored alerts could be simply configured by providing a `status` property:\n * @stacked-example(Alert status, alert/alert-colors.component)\n *\n * It is also possible to assign an `accent` property for a slight alert highlight\n * as well as combine it with `status`:\n * @stacked-example(Alert accent, alert/alert-accents.component)\n *\n * And `outline` property:\n * @stacked-example(Outline Alert, alert/alert-outline.component)\n *\n * @additional-example(Multiple Sizes, alert/alert-sizes.component)\n *\n * @styles\n *\n * alert-border-radius:\n * alert-bottom-margin:\n * alert-padding:\n * alert-scrollbar-color:\n * alert-scrollbar-background-color:\n * alert-scrollbar-width:\n * alert-shadow:\n * alert-text-font-family:\n * alert-text-font-size:\n * alert-text-font-weight:\n * alert-text-line-height:\n * alert-closable-start-padding:\n * alert-tiny-height:\n * alert-small-height:\n * alert-medium-height:\n * alert-medium-padding:\n * alert-large-height:\n * alert-giant-height:\n * alert-basic-background-color:\n * alert-basic-text-color:\n * alert-primary-background-color:\n * alert-primary-text-color:\n * alert-success-background-color:\n * alert-success-text-color:\n * alert-info-background-color:\n * alert-info-text-color:\n * alert-warning-background-color:\n * alert-warning-text-color:\n * alert-danger-background-color:\n * alert-danger-text-color:\n * alert-control-background-color:\n * alert-control-text-color:\n * alert-accent-basic-color:\n * alert-accent-primary-color:\n * alert-accent-info-color:\n * alert-accent-success-color:\n * alert-accent-warning-color:\n * alert-accent-danger-color:\n * alert-accent-control-color:\n * alert-outline-width:\n * alert-outline-basic-color:\n * alert-outline-primary-color:\n * alert-outline-info-color:\n * alert-outline-success-color:\n * alert-outline-warning-color:\n * alert-outline-danger-color:\n * alert-outline-control-color:\n */\nexport declare class NbAlertComponent {\n    protected statusService: NbStatusService;\n    /**\n     * Alert size, available sizes:\n     * `tiny`, `small`, `medium`, `large`, `giant`\n     * Unset by default.\n     */\n    size: '' | NbComponentSize;\n    /**\n     * Alert status (adds specific styles):\n     * `basic` (default), `primary`, `success`, `info`, `warning`, `danger`, `control`.\n     */\n    status: NbComponentOrCustomStatus;\n    /**\n     * Alert accent (color of the top border):\n     * `basic`, `primary`, `success`, `info`, `warning`, `danger`, `control`.\n     * Unset by default.\n     */\n    accent: '' | NbComponentStatus;\n    /**\n     * Alert outline (color of the border):\n     * `basic`, `primary`, `success`, `info`, `warning`, `danger`, `control`.\n     * Unset by default.\n     */\n    outline: '' | NbComponentStatus;\n    /**\n     * Shows `close` icon\n     */\n    get closable(): boolean;\n    set closable(value: boolean);\n    protected _closable: boolean;\n    static ngAcceptInputType_closable: NbBooleanInput;\n    /**\n     * Emits when chip is removed\n     * @type EventEmitter<any>\n     */\n    close: EventEmitter<any>;\n    constructor(statusService: NbStatusService);\n    /**\n     * Emits the removed chip event\n     */\n    onClose(): void;\n    get tiny(): boolean;\n    get small(): boolean;\n    get medium(): boolean;\n    get large(): boolean;\n    get giant(): boolean;\n    get primary(): boolean;\n    get success(): boolean;\n    get info(): boolean;\n    get warning(): boolean;\n    get danger(): boolean;\n    get basic(): boolean;\n    get control(): boolean;\n    get primaryAccent(): boolean;\n    get successAccent(): boolean;\n    get infoAccent(): boolean;\n    get warningAccent(): boolean;\n    get dangerAccent(): boolean;\n    get basicAccent(): boolean;\n    get controlAccent(): boolean;\n    get primaryOutline(): boolean;\n    get successOutline(): boolean;\n    get infoOutline(): boolean;\n    get warningOutline(): boolean;\n    get dangerOutline(): boolean;\n    get basicOutline(): boolean;\n    get controlOutline(): boolean;\n    get additionalClasses(): string[];\n}\n"]}