{"version":3,"file":"search.component.d.ts","sources":["search.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NbSearchService } from './search.service';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbOverlayService } from '../cdk/overlay/overlay-service';\nimport { NbPortalDirective } from '../cdk/overlay/mapping';\n/**\n * search-field-component is used under the hood by nb-search component\n * can't be used itself\n */\nexport declare class NbSearchFieldComponent implements OnChanges, AfterViewInit {\n    static readonly TYPE_MODAL_ZOOMIN = \"modal-zoomin\";\n    static readonly TYPE_ROTATE_LAYOUT = \"rotate-layout\";\n    static readonly TYPE_MODAL_MOVE = \"modal-move\";\n    static readonly TYPE_CURTAIN = \"curtain\";\n    static readonly TYPE_COLUMN_CURTAIN = \"column-curtain\";\n    static readonly TYPE_MODAL_DROP = \"modal-drop\";\n    static readonly TYPE_MODAL_HALF = \"modal-half\";\n    type: string;\n    placeholder: string;\n    hint: string;\n    show: boolean;\n    close: EventEmitter<any>;\n    search: EventEmitter<any>;\n    searchInput: EventEmitter<any>;\n    inputElement: ElementRef<HTMLInputElement>;\n    get showClass(): boolean;\n    get modalZoomin(): boolean;\n    get rotateLayout(): boolean;\n    get modalMove(): boolean;\n    get curtain(): boolean;\n    get columnCurtain(): boolean;\n    get modalDrop(): boolean;\n    get modalHalf(): boolean;\n    ngOnChanges({ show }: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    emitClose(): void;\n    submitSearch(term: any): void;\n    emitSearchInput(term: string): void;\n    focusInput(): void;\n}\nexport declare type NbSearchType = 'modal-zoomin' | 'rotate-layout' | 'modal-move' | 'curtain' | 'column-curtain' | 'modal-drop' | 'modal-half';\n/**\n * Beautiful full-page search control.\n *\n * @stacked-example(Showcase, search/search-showcase.component)\n *\n * Basic setup:\n *\n * ```ts\n *  <nb-search type=\"rotate-layout\"></nb-search>\n * ```\n * ### Installation\n *\n * Import `NbSearchModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSearchModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Several animation types are available:\n * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\n *\n * It is also possible to handle search event using `NbSearchService`:\n *\n * @stacked-example(Search Event, search/search-event.component)\n *\n * @styles\n *\n * search-background-color:\n * search-divider-color:\n * search-divider-style:\n * search-divider-width:\n * search-extra-background-color:\n * search-text-color:\n * search-text-font-family:\n * search-text-font-size:\n * search-text-font-weight:\n * search-text-line-height:\n * search-placeholder-text-color:\n * search-info-text-color:\n * search-info-text-font-family:\n * search-info-text-font-size:\n * search-info-text-font-weight:\n * search-info-text-line-height:\n */\nexport declare class NbSearchComponent implements OnInit, OnDestroy {\n    private searchService;\n    private themeService;\n    private router;\n    private overlayService;\n    private changeDetector;\n    private destroy$;\n    private overlayRef;\n    showSearchField: boolean;\n    /**\n     * Tags a search with some ID, can be later used in the search service\n     * to determine which search component triggered the action, if multiple searches exist on the page.\n     *\n     * @type {string}\n     */\n    tag: string;\n    /**\n     * Search input placeholder\n     * @type {string}\n     */\n    placeholder: string;\n    /**\n     * Hint showing under the input field to improve user experience\n     *\n     * @type {string}\n     */\n    hint: string;\n    /**\n     * Search design type, available types are\n     * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\n     * @type {string}\n     */\n    type: NbSearchType;\n    searchFieldPortal: NbPortalDirective;\n    searchButton: ElementRef<HTMLElement>;\n    constructor(searchService: NbSearchService, themeService: NbThemeService, router: Router, overlayService: NbOverlayService, changeDetector: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    openSearch(): void;\n    hideSearch(): void;\n    search(term: any): void;\n    emitInput(term: string): void;\n    emitActivate(): void;\n    emitDeactivate(): void;\n    private removeLayoutClasses;\n}\n"]}