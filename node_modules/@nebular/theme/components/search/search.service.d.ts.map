{"version":3,"file":"search.service.d.ts","sources":["search.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Observable } from 'rxjs';\n/**\n * Search component service, connects your code to a page-level search component.\n */\nexport declare class NbSearchService {\n    private searchSubmittings$;\n    private searchActivations$;\n    private searchDeactivations$;\n    private searchInput$;\n    /***\n     * Activate (open) search component\n     * @param {string} searchType\n     * @param {string} tag\n     */\n    activateSearch(searchType: string, tag?: string): void;\n    /**\n     * Deactibate (close) search component\n     * @param {string} searchType\n     * @param {string} tag\n     */\n    deactivateSearch(searchType: string, tag?: string): void;\n    /**\n     * Trigger search submit\n     * @param {string} term\n     * @param {string} tag\n     */\n    submitSearch(term: string, tag?: string): void;\n    /**\n     * Trigger search submit by input event\n     * @param {string} term\n     * @param {string} tag\n     */\n    searchInput(term: string, tag?: string): void;\n    /**\n     * Subscribe to 'activate' event\n     * @returns Observable<{searchType: string; tag?: string}>\n     */\n    onSearchActivate(): Observable<{\n        searchType: string;\n        tag?: string;\n    }>;\n    /**\n     * Subscribe to 'deactivate' event\n     * @returns Observable<{searchType: string; tag?: string}>\n     */\n    onSearchDeactivate(): Observable<{\n        searchType: string;\n        tag?: string;\n    }>;\n    /**\n     * Subscribe to 'submit' event (when submit button clicked)\n     * @returns Observable<{term: string; tag?: string}>\n     */\n    onSearchSubmit(): Observable<{\n        term: string;\n        tag?: string;\n    }>;\n    /**\n     * Subscribe to input event\n     * @returns Observable<{term: string; tag?: string}>\n     */\n    onSearchInput(): Observable<{\n        term: string;\n        tag?: string;\n    }>;\n}\n"]}