{"version":3,"file":"chat-message.component.d.ts","sources":["chat-message.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { TemplateRef } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NbBooleanInput } from '../helpers';\nimport { NbChatMessageFile } from './chat-message-file.component';\nimport { NbCustomMessageService } from './custom-message.service';\nimport { NbChatCustomMessageDirective } from './chat-custom-message.directive';\n/**\n * Chat message component.\n *\n * Multiple message types are available through a `type` property, such as\n * - text - simple text message\n * - file - could be a file preview or a file icon\n * if multiple files are provided grouped files are shown\n * - quote - quotes a message with specific quote styles\n * - map - shows a google map picture by provided [latitude] and [longitude] properties\n *\n * @stacked-example(Available Types, chat/chat-message-types-showcase.component)\n *\n * Message with attached files:\n * ```html\n * <nb-chat-message\n *   type=\"file\"\n *   [files]=\"[ { url: '...' } ]\"\n *   message=\"Hello world!\">\n * </nb-chat-message>\n * ```\n *\n * Map message:\n * ```html\n * <nb-chat-message\n *   type=\"map\"\n *   [latitude]=\"53.914\"\n *   [longitude]=\"27.59\"\n *   message=\"Here I am\">\n * </nb-chat-message>\n * ```\n *\n * @styles\n *\n * chat-message-background:\n * chat-message-text-color:\n * chat-message-reply-background-color:\n * chat-message-reply-text-color:\n * chat-message-avatar-background-color:\n * chat-message-sender-text-color:\n * chat-message-quote-background-color:\n * chat-message-quote-text-color:\n * chat-message-file-text-color:\n * chat-message-file-background-color:\n */\nexport declare class NbChatMessageComponent {\n    protected domSanitizer: DomSanitizer;\n    protected customMessageService: NbCustomMessageService;\n    protected readonly builtInMessageTypes: string[];\n    avatarStyle: SafeStyle;\n    get _addReplyClass(): boolean;\n    get _addNotReplyClass(): boolean;\n    get _addNoSpaceClass(): boolean;\n    get flyInOut(): boolean;\n    get notReply(): boolean;\n    /**\n     * Determines if a message is a reply\n     */\n    get reply(): boolean;\n    set reply(value: boolean);\n    protected _reply: boolean;\n    static ngAcceptInputType_reply: NbBooleanInput;\n    /**\n     * Message sender\n     * @type {string}\n     */\n    message: string;\n    /**\n     * Message sender\n     * @type {string}\n     */\n    sender: string;\n    /**\n     * Message send date\n     * @type {Date}\n     */\n    date: Date;\n    /**\n     * Message send date format, default 'shortTime'\n     * @type {string}\n     */\n    dateFormat: string;\n    /**\n     * Array of files `{ url: 'file url', icon: 'file icon class' }`\n     */\n    files: NbChatMessageFile[];\n    /**\n     * Quoted message text\n     * @type {string}\n     */\n    quote: string;\n    /**\n     * Map latitude\n     * @type {number}\n     */\n    latitude: number;\n    /**\n     * Map longitude\n     * @type {number}\n     */\n    longitude: number;\n    /**\n     * Message send avatar\n     * @type {string}\n     */\n    set avatar(value: string);\n    /**\n     * Message type, available options `text|file|map|quote`\n     * @type {string}\n     */\n    type: string;\n    /**\n     * Data which will be set as custom message template context\n     * @type {any}\n     */\n    customMessageData: any;\n    constructor(domSanitizer: DomSanitizer, customMessageService: NbCustomMessageService);\n    getInitials(): string;\n    _isBuiltInMessageType(): boolean;\n    _getTemplate(): TemplateRef<any>;\n    _getTemplateContext(): {\n        $implicit: any;\n        isReply: boolean;\n    };\n    _areDefaultStylesEnabled(): boolean;\n    protected getCustomMessage(type: string): NbChatCustomMessageDirective;\n}\n"]}