{"version":3,"file":"chat-form.component.d.ts","sources":["chat-form.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NbComponentOrCustomStatus } from '../component-status';\n/**\n * Chat form component.\n *\n * Show a message form with a send message button.\n *\n * ```ts\n * <nb-chat-form showButton=\"true\" buttonIcon=\"nb-send\">\n * </nb-chat-form>\n * ```\n *\n * When `[dropFiles]=\"true\"` handles files drag&drop with a file preview.\n *\n * Drag & drop available for files and images:\n * @stacked-example(Drag & Drop Chat, chat/chat-drop.component)\n *\n * New message could be tracked outside by using `(send)` output.\n *\n * ```ts\n * <nb-chat-form (send)=\"onNewMessage($event)\">\n * </nb-chat-form>\n *\n * // ...\n *\n * onNewMessage({ message: string, files: any[] }) {\n *   this.service.sendToServer(message, files);\n * }\n * ```\n */\nexport declare class NbChatFormComponent {\n    protected cd: ChangeDetectorRef;\n    protected domSanitizer: DomSanitizer;\n    status: NbComponentOrCustomStatus;\n    inputFocus: boolean;\n    inputHover: boolean;\n    droppedFiles: any[];\n    imgDropTypes: string[];\n    /**\n     * Predefined message text\n     * @type {string}\n     */\n    message: string;\n    /**\n     * Message placeholder text\n     * @type {string}\n     */\n    messagePlaceholder: string;\n    /**\n     * Send button title\n     * @type {string}\n     */\n    buttonTitle: string;\n    /**\n     * Send button icon, shown if `buttonTitle` is empty\n     * @type {string}\n     */\n    buttonIcon: string;\n    /**\n     * Show send button\n     * @type {boolean}\n     */\n    showButton: boolean;\n    /**\n     * Show send button\n     * @type {boolean}\n     */\n    dropFiles: boolean;\n    /**\n     * File drop placeholder text\n     * @type {string}\n     */\n    dropFilePlaceholder: string;\n    /**\n     *\n     * @type {EventEmitter<{ message: string, files: File[] }>}\n     */\n    send: EventEmitter<{\n        message: string;\n        files: File[];\n    }>;\n    /**\n     * Emits when message input value has been changed\n     * @type {EventEmitter<string>}\n     */\n    onInputChange: EventEmitter<string>;\n    fileOver: boolean;\n    constructor(cd: ChangeDetectorRef, domSanitizer: DomSanitizer);\n    onDrop(event: any): void;\n    removeFile(file: any): void;\n    onDragOver(): void;\n    onDragLeave(): void;\n    sendMessage(): void;\n    setStatus(status: NbComponentOrCustomStatus): void;\n    getInputStatus(): NbComponentOrCustomStatus;\n    getButtonStatus(): NbComponentOrCustomStatus;\n    protected getHighlightStatus(): NbComponentOrCustomStatus;\n    onModelChange(value: string): void;\n}\n"]}