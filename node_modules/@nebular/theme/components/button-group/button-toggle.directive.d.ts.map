{"version":3,"file":"button-toggle.directive.d.ts","sources":["button-toggle.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NbStatusService } from '../../services/status.service';\nimport { NbBooleanInput } from '../helpers';\nimport { NbButton, NbButtonAppearance } from '../button/base-button';\nexport declare type NbButtonToggleAppearance = Exclude<NbButtonAppearance, 'hero'>;\nexport interface NbButtonToggleChange {\n    source: NbButtonToggleDirective;\n    pressed: boolean;\n}\n/**\n * `[nbButtonToggle]` is a directive to add a `pressed` state to a button.\n */\nexport declare class NbButtonToggleDirective extends NbButton {\n    protected renderer: Renderer2;\n    protected hostElement: ElementRef<HTMLElement>;\n    protected cd: ChangeDetectorRef;\n    protected zone: NgZone;\n    protected statusService: NbStatusService;\n    protected readonly _pressedChange$: Subject<NbButtonToggleChange>;\n    get pressedChange$(): Observable<NbButtonToggleChange>;\n    appearance: NbButtonToggleAppearance;\n    /**\n     * A value associated with the button.\n     */\n    value: any;\n    /**\n     * Controls button pressed state\n     **/\n    get pressed(): boolean;\n    set pressed(value: boolean);\n    protected _pressed: boolean;\n    static ngAcceptInputType_pressed: NbBooleanInput;\n    /**\n     * Emits whenever button pressed state change\n     **/\n    readonly pressedChange: EventEmitter<boolean>;\n    get basic(): boolean;\n    get primary(): boolean;\n    get success(): boolean;\n    get info(): boolean;\n    get warning(): boolean;\n    get danger(): boolean;\n    get control(): boolean;\n    get additionalClasses(): string[];\n    onClick(): void;\n    constructor(renderer: Renderer2, hostElement: ElementRef<HTMLElement>, cd: ChangeDetectorRef, zone: NgZone, statusService: NbStatusService);\n    /**\n     * @docs-private\n     */\n    _updatePressed(value: boolean): void;\n}\n"]}