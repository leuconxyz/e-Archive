{"version":3,"file":"tag-list.component.d.ts","sources":["tag-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NbLayoutDirectionService } from '../../services/direction.service';\nimport { NbStatusService } from '../../services/status.service';\nimport { NbFocusMonitor } from '../cdk/a11y/a11y.module';\nimport { NbActiveDescendantKeyManager, NbActiveDescendantKeyManagerFactoryService } from '../cdk/a11y/descendant-key-manager';\nimport { NbBooleanInput } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbAutocompleteDirective } from '../autocomplete/autocomplete.directive';\nimport { NbTagComponent } from './tag.component';\nimport { NbTagInputDirective } from './tag-input.directive';\n/**\n *\n * `nb-tag-list` component displays a list of `nb-tag` components.\n *\n * @stacked-example(Tag List Showcase, tag/tag-showcase.component)\n *\n * @styles\n *\n * tag-list-tiny-tag-offset:\n * tag-list-small-tag-offset:\n * tag-list-medium-tag-offset:\n * tag-list-large-tag-offset:\n * tag-list-giant-tag-offset:\n * tag-list-with-input-tiny-padding:\n * tag-list-with-input-small-padding:\n * tag-list-with-input-medium-padding:\n * tag-list-with-input-large-padding:\n * tag-list-with-input-giant-padding:\n * tag-list-with-input-rectangle-border-radius:\n * tag-list-with-input-semi-round-border-radius:\n * tag-list-with-input-round-border-radius:\n */\nexport declare class NbTagListComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {\n    protected hostElement: ElementRef<HTMLElement>;\n    protected cd: ChangeDetectorRef;\n    protected renderer: Renderer2;\n    protected zone: NgZone;\n    protected focusMonitor: NbFocusMonitor;\n    protected activeDescendantKeyManagerFactory: NbActiveDescendantKeyManagerFactoryService<NbTagComponent>;\n    protected directionService: NbLayoutDirectionService;\n    protected statusService: NbStatusService;\n    protected readonly destroy$: Subject<void>;\n    protected readonly keyDown$: Subject<KeyboardEvent>;\n    protected readonly tagClick$: Subject<NbTagComponent>;\n    protected focused: boolean;\n    protected keyManager: NbActiveDescendantKeyManager<NbTagComponent>;\n    tags: QueryList<NbTagComponent>;\n    tagInput: NbTagInputDirective;\n    autocompleteDirective: NbAutocompleteDirective<any>;\n    /**\n     * Controls tags offset.\n     */\n    size: NbComponentSize;\n    tabIndex: number;\n    role: string;\n    get multiple(): boolean;\n    set multiple(value: boolean);\n    protected _multiple: boolean;\n    static ngAcceptInputType_multiple: NbBooleanInput;\n    activeTagId: string | null;\n    /**\n     * Emits when tag need to be removed (whether because of click on the remove button\n     * or when `delete` or `backspace` key pressed).\n     */\n    readonly tagRemove: EventEmitter<NbTagComponent>;\n    get _hasInput(): boolean;\n    get _isFocused(): boolean;\n    get _isFullWidth(): boolean;\n    get _inputClasses(): string[];\n    _onKeydown(event: KeyboardEvent): void;\n    _onClick({ target }: MouseEvent): void;\n    constructor(hostElement: ElementRef<HTMLElement>, cd: ChangeDetectorRef, renderer: Renderer2, zone: NgZone, focusMonitor: NbFocusMonitor, activeDescendantKeyManagerFactory: NbActiveDescendantKeyManagerFactoryService<NbTagComponent>, directionService: NbLayoutDirectionService, statusService: NbStatusService);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    protected initKeyManager(): void;\n    protected listenToLayoutDirectionChange(): void;\n    protected listenListKeyDown(): void;\n    protected listenInputKeyDown(): void;\n    protected listenTagClick(): void;\n    protected listenTagRemove(): void;\n    protected listenTagDestroy(): void;\n    protected listenNoTags(): void;\n    protected listenActiveTagChange(): void;\n    protected onFocusChange(isFocused: boolean): void;\n    protected isBackspaceOrDelete(keyCode: number): boolean;\n    protected setAutocompleteCustomHost(): void;\n    protected toggleTag(tagToToggle: NbTagComponent): void;\n    protected focusInput(): void;\n    protected focusInputIfActive(): void;\n}\n"]}