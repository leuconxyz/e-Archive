{"version":3,"file":"spinner.directive.d.ts","sources":["spinner.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { ComponentFactoryResolver, ComponentFactory, ComponentRef, ElementRef, OnInit, Renderer2, ViewContainerRef } from '@angular/core';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentOrCustomStatus } from '../component-status';\nimport { NbSpinnerComponent } from './spinner.component';\n/**\n * Styled spinner directive\n *\n * @stacked-example(Spinner Showcase, spinner/spinner-card.component)\n *\n *\n * ```ts\n * <nb-card [nbSpinner]=\"loading\" nbSpinnerStatus=\"danger\">\n *   <nb-card-body>Card Content</nb-card-body>\n * </nb-card>\n * ```\n *\n * ### Installation\n *\n * Import `NbSpinnerModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSpinnerModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Could be colored using `status` property\n *\n * @stacked-example(Spinner Colors, spinner/spinner-colors.component)\n *\n * Available in different sizes with `size` property:\n *\n * @stacked-example(Spinner Sizes, spinner/spinner-sizes.component)\n *\n * It is also possible to place it into the button:\n * @stacked-example(Buttons with spinner, spinner/spinner-button.component)\n *\n * Or tabs:\n * @stacked-example(Spinner in tabs, spinner/spinner-tabs.component)\n */\nexport declare class NbSpinnerDirective implements OnInit {\n    private directiveView;\n    private componentFactoryResolver;\n    private renderer;\n    private directiveElement;\n    private shouldShow;\n    spinner: ComponentRef<NbSpinnerComponent>;\n    componentFactory: ComponentFactory<NbSpinnerComponent>;\n    /**\n     * Spinner message shown next to the icon\n     * @type {string}\n     */\n    spinnerMessage: string;\n    /**\n     * Spinner status color\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`.\n     */\n    spinnerStatus: NbComponentOrCustomStatus;\n    /**\n     * Spinner size. Possible values: `tiny`, `small`, `medium` (default), `large`, `giant`\n     */\n    spinnerSize: NbComponentSize;\n    /**\n     * Directive value - show or hide spinner\n     * @param {boolean} val\n     */\n    set nbSpinner(val: boolean);\n    isSpinnerExist: boolean;\n    constructor(directiveView: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, renderer: Renderer2, directiveElement: ElementRef);\n    ngOnInit(): void;\n    hide(): void;\n    show(): void;\n    setInstanceInputs(instance: NbSpinnerComponent): void;\n}\n"]}