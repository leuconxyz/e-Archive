{"version":3,"file":"scroll.service.d.ts","sources":["scroll.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable, Subject } from 'rxjs';\n/**\n * Scroll position type\n */\nexport interface NbScrollPosition {\n    /**\n     * x - left\n     * @type {number}\n     */\n    x: number;\n    /**\n     * y - top\n     * @type {number}\n     */\n    y: number;\n}\n/**\n * Layout scroll service. Provides information about current scroll position,\n * as well as methods to update position of the scroll.\n *\n * The reason we added this service is that in Nebular there are two scroll modes:\n * - the default mode when scroll is on body\n * - and the `withScroll` mode, when scroll is removed from the body and moved to an element inside of the\n * `nb-layout` component\n */\nexport declare class NbLayoutScrollService {\n    private scrollPositionReq$;\n    private manualScroll$;\n    private scroll$;\n    private scrollable$;\n    /**\n     * Returns scroll position\n     *\n     * @returns {Observable<NbScrollPosition>}\n     */\n    getPosition(): Observable<NbScrollPosition>;\n    /**\n     * Sets scroll position\n     *\n     * @param {number} x\n     * @param {number} y\n     */\n    scrollTo(x?: number, y?: number): void;\n    /**\n     * Returns a stream of scroll events\n     *\n     * @returns {Observable<any>}\n     */\n    onScroll(): Observable<any>;\n    /**\n     * @private\n     * @returns Observable<NbScrollPosition>.\n     */\n    onManualScroll(): Observable<NbScrollPosition>;\n    /**\n     * @private\n     * @returns {Subject<any>}\n     */\n    onGetPosition(): Subject<any>;\n    onScrollableChange(): Observable<boolean>;\n    /**\n     * @private\n     * @param {any} event\n     */\n    fireScrollChange(event: any): void;\n    scrollable(scrollable: boolean): void;\n}\n"]}