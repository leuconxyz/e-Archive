{"version":3,"file":"js-themes-registry.service.d.ts","sources":["js-themes-registry.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { NbJSThemeOptions } from './js-themes/theme.options';\nexport declare const BUILT_IN_THEMES: NbJSThemeOptions[];\n/**\n * Js Themes registry - provides access to the JS themes' variables.\n * Usually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme).\n */\nexport declare class NbJSThemesRegistry {\n    private themes;\n    constructor(builtInThemes: NbJSThemeOptions[], newThemes?: NbJSThemeOptions[]);\n    /**\n     * Registers a new JS theme\n     * @param config any\n     * @param themeName string\n     * @param baseTheme string\n     */\n    register(config: any, themeName: string, baseTheme: string): void;\n    /**\n     * Checks whether the theme is registered\n     * @param themeName\n     * @returns boolean\n     */\n    has(themeName: string): boolean;\n    /**\n     * Return a theme\n     * @param themeName\n     * @returns NbJSThemeOptions\n     */\n    get(themeName: string): NbJSThemeOptions;\n    private combineByNames;\n    private isObject;\n    private mergeDeep;\n}\n"]}