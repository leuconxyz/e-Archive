{"version":3,"file":"breakpoints.service.d.ts","sources":["breakpoints.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * Media breakpoint type\n *\n * Where `name` - breakpoint name alias (e.g. xs, sm, md, etc), and width - min breakpoint width\n */\nexport interface NbMediaBreakpoint {\n    name: string;\n    width: number;\n}\nexport declare const DEFAULT_MEDIA_BREAKPOINTS: {\n    name: string;\n    width: number;\n}[];\n/**\n * Manages media breakpoints\n *\n * Provides access to available media breakpoints to convert window width to a configured breakpoint,\n * e.g. 200px - *xs* breakpoint\n */\nexport declare class NbMediaBreakpointsService {\n    private breakpoints;\n    private breakpointsMap;\n    constructor(breakpoints: any);\n    /**\n     * Returns a configured breakpoint by width\n     * @param width number\n     * @returns {Z|{name: string, width: number}}\n     */\n    getByWidth(width: number): NbMediaBreakpoint;\n    /**\n     * Returns a configured breakpoint by name\n     * @param name string\n     * @returns NbMediaBreakpoint\n     */\n    getByName(name: string): NbMediaBreakpoint;\n    /**\n     * Returns a list of configured breakpoints for the theme\n     * @returns NbMediaBreakpoint[]\n     */\n    getBreakpoints(): NbMediaBreakpoint[];\n    /**\n     * Returns a map of configured breakpoints for the theme\n     * @returns {[p: string]: number}\n     */\n    getBreakpointsMap(): {\n        [breakpoint: string]: number;\n    };\n}\n"]}