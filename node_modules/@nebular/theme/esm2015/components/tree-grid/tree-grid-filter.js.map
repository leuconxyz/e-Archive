{"version":3,"file":"tree-grid-filter.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/tree-grid/tree-grid-filter.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAqB,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAKzD,MAAM,OAAO,iBAAiB;IAG5B,MAAM,CAAC,aAAqB;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;;;YANF,SAAS,SAAC,EAAE,QAAQ,EAAE,YAAY,EAAE;;;yBAElC,KAAK,SAAC,UAAU;;AAOnB;;GAEG;AAKH,MAAM,OAAO,sBAAuB,SAAQ,iBAAiB;IAJ7D;;QAKU,YAAO,GAAoB,IAAI,OAAO,EAAU,CAAC;QACjD,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;QAIvC;;;WAGG;QACM,iBAAY,GAAW,GAAG,CAAC;IAuBtC,CAAC;IArBC,QAAQ;QACN,IAAI,CAAC,OAAO;aACT,IAAI,CACH,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YAC3B,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC;IAGD,MAAM,CAAC,KAAK;QACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;;;YApCF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,sBAAsB,EAAE,CAAC;aACjF;;;yBAKE,KAAK,SAAC,eAAe;2BAMrB,KAAK;qBAmBL,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Directive, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\nimport { NbFilterable } from './data-source/tree-grid-data-source';\n\n@Directive({ selector: '[nbFilter]' })\nexport class NbFilterDirective {\n  @Input('nbFilter') filterable: NbFilterable;\n\n  filter(filterRequest: string) {\n    this.filterable.filter(filterRequest);\n  }\n}\n\n/**\n * Helper directive to trigger data source's filter method when user types in input\n */\n@Directive({\n  selector: '[nbFilterInput]',\n  providers: [{ provide: NbFilterDirective, useExisting: NbFilterInputDirective }],\n})\nexport class NbFilterInputDirective extends NbFilterDirective implements OnInit, OnDestroy {\n  private search$: Subject<string> = new Subject<string>();\n  private destroy$ = new Subject<void>();\n\n  @Input('nbFilterInput') filterable: NbFilterable;\n\n  /**\n   * Debounce time before triggering filter method. Set in milliseconds.\n   * Default 200.\n   */\n  @Input() debounceTime: number = 200;\n\n  ngOnInit() {\n    this.search$\n      .pipe(\n        debounceTime(this.debounceTime),\n        takeUntil(this.destroy$),\n      )\n      .subscribe((query: string) => {\n        super.filter(query)\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.search$.complete();\n  }\n\n  @HostListener('input', ['$event'])\n  filter(event) {\n    this.search$.next(event.target.value);\n  }\n}\n"]}