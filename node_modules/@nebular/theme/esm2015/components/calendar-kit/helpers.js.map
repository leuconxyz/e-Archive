{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar-kit/helpers.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,MAAM,CAAC,MAAM,KAAK,GAAG,CAAI,MAAW,EAAE,SAAiB,EAAE,SAAiB,CAAC,EAAS,EAAE;IACpF,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACxC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACpB,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;SACtB;QACD,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAA;AACR,CAAC,CAAC;AACF;;KAEK;AACL,MAAM,CAAC,MAAM,WAAW,GAAG,CAAI,IAAY,EAAE,EAAE,GAAG,CAAC,EAAE,WAA0B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE;IACvF,MAAM,GAAG,GAAG,EAAE,CAAC;IAEf,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;QAC9B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACvB;IAED,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF;;KAEK;AACL,MAAM,CAAC,MAAM,KAAK,GAAG,CAAI,KAAa,EAAE,WAA0B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE;IAC1E,OAAO,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AACzC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index) => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n    return res;\n  }, [])\n};\n/**\n * returns array with numbers from first argument to bound.\n * */\nexport const rangeFromTo = <T>(from: number, to = 0, producer: (number) => T = i => i) => {\n  const arr = [];\n\n  for (let i = from; i < to; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  return rangeFromTo(0, bound, producer);\n};\n"]}