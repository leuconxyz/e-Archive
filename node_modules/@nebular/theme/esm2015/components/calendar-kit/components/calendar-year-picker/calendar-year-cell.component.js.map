{"version":3,"file":"calendar-year-cell.component.js","sourceRoot":"","sources":["../../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,KAAK,EACL,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAkB,cAAc,EAAwB,MAAM,aAAa,CAAC;AAYnF,MAAM,OAAO,2BAA2B;IActC,YAAsB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;QAL1C,SAAI,GAAmB,cAAc,CAAC,MAAM,CAAC;QAG5C,WAAM,GAAoB,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QAuB3D,kBAAa,GAAG,IAAI,CAAC;IApBrB,CAAC;IAED,IAAmC,QAAQ;QACzC,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACxE,CAAC;IAED,IAAgC,KAAK;QACnC,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,IAAmC,QAAQ;QACzC,OAAO,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;IACxD,CAAC;IAED,IACI,OAAO;QACT,OAAO,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,CAAC;IAC5C,CAAC;IAKD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAGD,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,cAAc;QACpB,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9F,CAAC;IAEO,cAAc;QACpB,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChG,CAAC;IAEO,SAAS;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAEO,OAAO;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;;;YAzEF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,QAAQ,EAAE;;;;GAIT;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAZQ,aAAa;;;mBAcnB,KAAK;kBAEL,KAAK;kBAEL,KAAK;4BAEL,KAAK;mBAEL,KAAK;qBAGL,MAAM;uBAKN,WAAW,SAAC,gBAAgB;oBAI5B,WAAW,SAAC,aAAa;uBAIzB,WAAW,SAAC,gBAAgB;sBAI5B,WAAW,SAAC,kBAAkB;4BAK9B,WAAW,SAAC,iBAAiB;sBAO7B,YAAY,SAAC,OAAO","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { NbDateService } from '../../services/date.service';\nimport { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';\n\n\n@Component({\n  selector: 'nb-calendar-year-cell',\n  template: `\n    <div class=\"cell-content\">\n      {{ year }}\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbCalendarYearCellComponent<D> implements NbCalendarCell<D, D> {\n  @Input() date: D;\n\n  @Input() min: D;\n\n  @Input() max: D;\n\n  @Input() selectedValue: D;\n\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n  static ngAcceptInputType_size: NbCalendarSizeValues;\n\n  @Output() select: EventEmitter<D> = new EventEmitter(true);\n\n  constructor(protected dateService: NbDateService<D>) {\n  }\n\n  @HostBinding('class.selected') get selected(): boolean {\n    return this.dateService.isSameYearSafe(this.date, this.selectedValue);\n  }\n\n  @HostBinding('class.today') get today(): boolean {\n    return this.dateService.isSameYearSafe(this.date, this.dateService.today());\n  }\n\n  @HostBinding('class.disabled') get disabled(): boolean {\n    return this.smallerThanMin() || this.greaterThanMax();\n  }\n\n  @HostBinding('class.size-large')\n  get isLarge(): boolean {\n    return this.size === NbCalendarSize.LARGE;\n  }\n\n  @HostBinding('class.year-cell')\n  yearCellClass = true;\n\n  get year(): number {\n    return this.dateService.getYear(this.date);\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.select.emit(this.date);\n  }\n\n  private smallerThanMin(): boolean {\n    return this.date && this.min && this.dateService.compareDates(this.yearEnd(), this.min) < 0;\n  }\n\n  private greaterThanMax(): boolean {\n    return this.date && this.max && this.dateService.compareDates(this.yearStart(), this.max) > 0;\n  }\n\n  private yearStart(): D {\n    return this.dateService.getYearStart(this.date);\n  }\n\n  private yearEnd(): D {\n    return this.dateService.getYearEnd(this.date);\n  }\n}\n"]}