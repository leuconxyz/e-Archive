{"version":3,"file":"window.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/window/window.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  Renderer2,\n  ViewChild,\n  Type,\n  ComponentFactoryResolver,\n  Input,\n  AfterViewChecked,\n} from '@angular/core';\nimport { NbFocusTrap, NbFocusTrapFactoryService } from '../cdk/a11y/focus-trap';\nimport { NbComponentPortal, NbComponentType, NbTemplatePortal } from '../cdk/overlay/mapping';\nimport { NbOverlayContainerComponent } from '../cdk/overlay/overlay-container';\nimport { NB_WINDOW_CONTENT, NbWindowConfig, NbWindowState, NB_WINDOW_CONTEXT } from './window.options';\nimport { NbWindowRef } from './window-ref';\n\n@Component({\n  selector: 'nb-window',\n  template: `\n    <nb-card>\n      <nb-card-header>\n        <div cdkFocusInitial class=\"title\" tabindex=\"-1\">{{ config.title }}</div>\n\n        <div class=\"buttons\">\n          <ng-container *ngIf=\"showMinimize\">\n            <button nbButton ghost (click)=\"minimize()\">\n              <nb-icon icon=\"minus-outline\" pack=\"nebular-essentials\"></nb-icon>\n            </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"showMaximize\">\n            <button nbButton ghost *ngIf=\"isFullScreen\" (click)=\"maximize()\">\n              <nb-icon icon=\"collapse-outline\" pack=\"nebular-essentials\"></nb-icon>\n            </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"showFullScreen\">\n            <button nbButton ghost *ngIf=\"minimized || maximized\" (click)=\"maximizeOrFullScreen()\">\n              <nb-icon icon=\"expand-outline\" pack=\"nebular-essentials\"></nb-icon>\n            </button>\n          </ng-container>\n\n          <button nbButton ghost (click)=\"close()\">\n            <nb-icon icon=\"close-outline\" pack=\"nebular-essentials\"></nb-icon>\n          </button>\n        </div>\n      </nb-card-header>\n      <nb-card-body *ngIf=\"maximized || isFullScreen\">\n        <nb-overlay-container></nb-overlay-container>\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./window.component.css'],\n})\nexport class NbWindowComponent implements OnInit, AfterViewChecked, OnDestroy {\n  @Input() cfr: ComponentFactoryResolver;\n\n  @HostBinding('class.full-screen')\n  get isFullScreen() {\n    return this.windowRef.state === NbWindowState.FULL_SCREEN;\n  }\n\n  @HostBinding('class.maximized')\n  get maximized() {\n    return this.windowRef.state === NbWindowState.MAXIMIZED;\n  }\n\n  @HostBinding('class.minimized')\n  get minimized() {\n    return this.windowRef.state === NbWindowState.MINIMIZED;\n  }\n\n  get showMinimize(): boolean {\n    return this.config.buttons.minimize;\n  }\n\n  get showMaximize(): boolean {\n    return this.config.buttons.maximize;\n  }\n\n  get showFullScreen(): boolean {\n    return this.config.buttons.fullScreen;\n  }\n\n  @ViewChild(NbOverlayContainerComponent) overlayContainer: NbOverlayContainerComponent;\n\n  protected focusTrap: NbFocusTrap;\n\n  constructor(\n    @Inject(NB_WINDOW_CONTENT) public content: TemplateRef<any> | NbComponentType,\n    @Inject(NB_WINDOW_CONTEXT) public context: Object,\n    public windowRef: NbWindowRef,\n    public config: NbWindowConfig,\n    protected focusTrapFactory: NbFocusTrapFactoryService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    this.focusTrap.blurPreviouslyFocusedElement();\n    this.focusTrap.focusInitialElement();\n\n    if (this.config.windowClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.config.windowClass);\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (!this.overlayContainer || this.overlayContainer.isAttached) {\n      return;\n    }\n\n    if (this.content instanceof TemplateRef) {\n      this.attachTemplate();\n    } else {\n      this.attachComponent();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.focusTrap) {\n      this.focusTrap.restoreFocus();\n    }\n\n    this.close();\n  }\n\n  minimize() {\n    if (this.windowRef.state === NbWindowState.MINIMIZED) {\n      this.windowRef.toPreviousState();\n    } else {\n      this.windowRef.minimize();\n    }\n  }\n\n  maximize() {\n    this.windowRef.maximize();\n  }\n\n  fullScreen() {\n    this.windowRef.fullScreen();\n  }\n\n  maximizeOrFullScreen() {\n    if (this.windowRef.state === NbWindowState.MINIMIZED && this.showMaximize) {\n      this.maximize();\n    } else {\n      this.fullScreen();\n    }\n  }\n\n  close() {\n    this.windowRef.close();\n  }\n\n  protected attachTemplate() {\n    this.overlayContainer\n      .attachTemplatePortal(new NbTemplatePortal(this.content as TemplateRef<any>, null, this.context));\n  }\n\n  protected attachComponent() {\n    const portal = new NbComponentPortal(this.content as Type<any>, null, null, this.cfr);\n    const ref = this.overlayContainer.attachComponentPortal(portal, this.context);\n    ref.changeDetectorRef.detectChanges();\n  }\n}\n"]}