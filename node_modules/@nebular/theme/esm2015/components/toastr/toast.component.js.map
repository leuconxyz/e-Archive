{"version":3,"file":"toast.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/toastr/toast.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\n\nimport { NbStatusService } from '../../services/status.service';\nimport { NbIconConfig } from '../icon/icon.component';\nimport { NbToast } from './model';\n\n/**\n * The `NbToastComponent` is responsible for rendering each toast with appropriate styles.\n *\n * @styles\n *\n * toastr-border-style:\n * toastr-border-width:\n * toastr-border-radius:\n * toastr-padding:\n * toastr-shadow:\n * toastr-text-font-family:\n * toastr-text-font-size:\n * toastr-text-font-weight:\n * toastr-text-line-height:\n * toastr-title-text-font-family:\n * toastr-title-text-font-size:\n * toastr-title-text-font-weight:\n * toastr-title-text-line-height:\n * toastr-basic-background-color:\n * toastr-basic-border-color:\n * toastr-basic-text-color:\n * toastr-icon-basic-background-color:\n * toastr-icon-basic-color:\n * toastr-destroyable-basic-hover-background-color:\n * toastr-destroyable-basic-hover-border-color:\n * toastr-primary-background-color:\n * toastr-primary-border-color:\n * toastr-primary-text-color:\n * toastr-icon-primary-background-color:\n * toastr-icon-primary-color:\n * toastr-destroyable-primary-hover-background-color:\n * toastr-destroyable-primary-hover-border-color:\n * toastr-success-background-color:\n * toastr-success-border-color:\n * toastr-success-text-color:\n * toastr-icon-success-background-color:\n * toastr-icon-success-color:\n * toastr-destroyable-success-hover-background-color:\n * toastr-destroyable-success-hover-border-color:\n * toastr-info-background-color:\n * toastr-info-border-color:\n * toastr-info-text-color:\n * toastr-icon-info-background-color:\n * toastr-icon-info-color:\n * toastr-destroyable-info-hover-background-color:\n * toastr-destroyable-info-hover-border-color:\n * toastr-warning-background-color:\n * toastr-warning-border-color:\n * toastr-warning-text-color:\n * toastr-icon-warning-background-color:\n * toastr-icon-warning-color:\n * toastr-destroyable-warning-hover-background-color:\n * toastr-destroyable-warning-hover-border-color:\n * toastr-danger-background-color:\n * toastr-danger-border-color:\n * toastr-danger-text-color:\n * toastr-icon-danger-background-color:\n * toastr-icon-danger-color:\n * toastr-destroyable-danger-hover-background-color:\n * toastr-destroyable-danger-hover-border-color:\n * toastr-control-background-color:\n * toastr-control-border-color:\n * toastr-control-text-color:\n * toastr-icon-control-background-color:\n * toastr-icon-control-color:\n * toastr-destroyable-control-hover-background-color:\n * toastr-destroyable-control-hover-border-color:\n * */\n@Component({\n  selector: 'nb-toast',\n  styleUrls: ['./toast.component.css'],\n  templateUrl: './toast.component.html',\n})\nexport class NbToastComponent implements OnInit {\n  @Input()\n  toast: NbToast;\n\n  @Output() destroy: EventEmitter<void> = new EventEmitter();\n\n  @HostBinding('class.status-success')\n  get success(): boolean {\n    return this.toast.config.status === 'success';\n  }\n\n  @HostBinding('class.status-info')\n  get info(): boolean {\n    return this.toast.config.status === 'info';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning(): boolean {\n    return this.toast.config.status === 'warning';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary(): boolean {\n    return this.toast.config.status === 'primary';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger(): boolean {\n    return this.toast.config.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic(): boolean {\n    return this.toast.config.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control(): boolean {\n    return this.toast.config.status === 'control';\n  }\n\n  @HostBinding('class.destroy-by-click')\n  get destroyByClick(): boolean {\n    return this.toast.config.destroyByClick;\n  }\n\n  @HostBinding('class.has-icon')\n  get hasIcon(): boolean {\n    const { icon } = this.toast.config;\n    if (typeof icon === 'string') {\n      return true;\n    }\n\n    return !!(icon && (icon as NbIconConfig).icon);\n  }\n\n  @HostBinding('class.custom-icon')\n  get customIcon(): boolean {\n    return !!this.icon;\n  }\n\n  get icon(): string | NbIconConfig {\n    return this.toast.config.icon;\n  }\n\n  @HostBinding('class')\n  get additionalClasses(): string[] {\n    if (this.statusService.isCustomStatus(this.toast.config.status)) {\n      return [this.statusService.getStatusClass(this.toast.config.status)];\n    }\n    return [];\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.destroy.emit();\n  }\n\n  constructor(\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected statusService: NbStatusService,\n  ) {}\n\n  ngOnInit() {\n    if (this.toast.config.toastClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.toast.config.toastClass);\n    }\n  }\n}\n"]}