{"version":3,"file":"toastr-config.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/toastr/toastr-config.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,uBAAuB,EAAoB,MAAM,gCAAgC,CAAC;AAQ3F,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,cAAc,CAAiB,wBAAwB,CAAC,CAAC;AAI7F;;KAEK;AACL,MAAM,OAAO,cAAc;IAwDzB,YAAY,MAA+B;QAvD3C;;aAEK;QACL,aAAQ,GAAqB,uBAAuB,CAAC,OAAO,CAAC;QAC7D;;aAEK;QACL,WAAM,GAA8B,OAAO,CAAC;QAC5C;;aAEK;QACL,aAAQ,GAAW,IAAI,CAAC;QACxB;;aAEK;QACL,mBAAc,GAAY,IAAI,CAAC;QAC/B;;;;aAIK;QACL,sBAAiB,GAAY,KAAK,CAAC;QACnC;;aAEK;QACL,wBAAmB,GAA8B,UAAU,CAAC;QAC5D;;YAEI;QACJ,UAAK,GAAY,IAAI,CAAC;QACtB;;WAEG;QACH,eAAU,GAAW,EAAE,CAAC;QACxB;;aAEK;QACL,YAAO,GAAY,IAAI,CAAC;QACxB;;aAEK;QACL,SAAI,GAA0B,OAAO,CAAC;QACtC;;aAEK;QACK,UAAK,GAAmB;YAChC,MAAM,EAAE,eAAe;YACvB,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,uBAAuB;YAC7B,OAAO,EAAE,wBAAwB;YACjC,OAAO,EAAE,eAAe;YACxB,OAAO,EAAE,eAAe;YACxB,KAAK,EAAE,eAAe;SACvB,CAAC;QAGA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAES,SAAS,CAAC,MAA+B;QACjD,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE;YACvB,MAAM,CAAC,IAAI,GAAG;gBACZ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK;gBACnD,IAAI,EAAE,oBAAoB;aAC3B,CAAC;SACH;IACH,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nimport { NbGlobalLogicalPosition, NbGlobalPosition } from '../cdk/overlay/position-helper';\nimport { NbComponentOrCustomStatus, NbComponentStatus } from '../component-status';\nimport { NbIconConfig } from '../icon/icon.component';\n\ntype IconToClassMap = {\n  [status in NbComponentStatus]: string;\n}\n\nexport const NB_TOASTR_CONFIG = new InjectionToken<NbToastrConfig>('Default toastr options');\n\nexport type NbDuplicateToastBehaviour = 'previous' | 'all';\n\n/**\n * The `NbToastrConfig` class describes configuration of the `NbToastrService.show` and global toastr configuration.\n * */\nexport class NbToastrConfig {\n  /**\n   * Determines where on the screen toast have to be rendered.\n   * */\n  position: NbGlobalPosition = NbGlobalLogicalPosition.TOP_END;\n  /**\n   * Status chooses color scheme for the toast.\n   * */\n  status: NbComponentOrCustomStatus = 'basic';\n  /**\n   * Duration is timeout between toast appears and disappears.\n   * */\n  duration: number = 3000;\n  /**\n   * Destroy by click means you can hide the toast by clicking it.\n   * */\n  destroyByClick: boolean = true;\n  /**\n   * If preventDuplicates is true then the toast with the same title, message and status will not be rendered.\n   * Find duplicates behaviour determined by `preventDuplicates`.\n   * The default `previous` duplicate behaviour is used.\n   * */\n  preventDuplicates: boolean = false;\n  /**\n   * Determines the how to treat duplicates.\n   * */\n  duplicatesBehaviour: NbDuplicateToastBehaviour = 'previous';\n  /*\n  * The number of visible toasts. If the limit exceeded the oldest toast will be removed.\n  * */\n  limit?: number = null;\n  /**\n   * Class to be applied to the toast.\n   */\n  toastClass: string = '';\n  /**\n   * Determines render icon or not.\n   * */\n  hasIcon: boolean = true;\n  /**\n   * Icon name or icon config object that can be provided to render custom icon.\n   * */\n  icon: string | NbIconConfig = 'email';\n  /**\n   * Toast status icon-class mapping.\n   * */\n  protected icons: IconToClassMap = {\n    danger: 'flash-outline',\n    success: 'checkmark-outline',\n    info: 'question-mark-outline',\n    warning: 'alert-triangle-outline',\n    primary: 'email-outline',\n    control: 'email-outline',\n    basic: 'email-outline',\n  };\n\n  constructor(config: Partial<NbToastrConfig>) {\n    this.patchIcon(config);\n    Object.assign(this, config);\n  }\n\n  protected patchIcon(config: Partial<NbToastrConfig>) {\n    if (!('icon' in config)) {\n      config.icon = {\n        icon: this.icons[config.status] || this.icons.basic,\n        pack: 'nebular-essentials',\n      };\n    }\n  }\n}\n"]}