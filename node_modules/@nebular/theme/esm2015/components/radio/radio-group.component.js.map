{"version":3,"file":"radio-group.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/radio/radio-group.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  PLATFORM_ID,\n  Inject,\n  ElementRef,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { from, fromEvent, merge, Subject } from 'rxjs';\nimport { filter, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { NbComponentOrCustomStatus } from '../component-status';\nimport { NbRadioComponent } from './radio.component';\n\n/**\n * The `NbRadioGroupComponent` is the wrapper for `nb-radio` button.\n * It provides form bindings:\n *\n * ```html\n * <nb-radio-group [(ngModel)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * Also, you can use `value` and `valueChange` for binding without forms.\n *\n * ```html\n * <nb-radio-group [(value)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * Radio items name has to be provided through `name` input property of the radio group.\n *\n * ```html\n * <nb-radio-group name=\"my-radio-group\">\n *   ...\n * </nb-radio-group>\n * ```\n *\n * You can change radio group status by setting `status` input.\n * @stacked-example(Statuses, radio/radio-statuses.component)\n *\n * Also, you can disable the whole group using `disabled` attribute.\n * @stacked-example(Disabled group, radio/radio-disabled-group.component)\n *\n * Radio group supports `ngModel` and reactive forms:\n * @stacked-example(Radio Group with forms, radio/radio-form.component)\n *\n * */\n@Component({\n  selector: 'nb-radio-group',\n  template: `\n    <ng-content select=\"nb-radio\"></ng-content>`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbRadioGroupComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbRadioGroupComponent implements AfterContentInit, OnDestroy, ControlValueAccessor {\n\n  protected destroy$ = new Subject<void>();\n  protected onChange = (value: any) => {};\n  protected onTouched = () => {};\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    this.updateValues();\n  }\n  protected _value: any;\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    this.updateNames();\n  }\n  protected _name: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    this._disabled = convertToBoolProperty(disabled);\n    this.updateDisabled();\n  }\n  protected _disabled: boolean;\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Radio buttons status.\n   * Possible values are `primary` (default), `success`, `warning`, `danger`, `info`.\n   */\n  @Input()\n  get status(): NbComponentOrCustomStatus {\n    return this._status;\n  }\n  set status(value: NbComponentOrCustomStatus) {\n    if (this._status !== value) {\n      this._status = value;\n      this.updateStatus();\n    }\n  }\n  protected _status: NbComponentOrCustomStatus = 'basic';\n\n  @ContentChildren(NbRadioComponent, { descendants: true }) radios: QueryList<NbRadioComponent>;\n\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    protected hostElement: ElementRef<HTMLElement>,\n    @Inject(PLATFORM_ID) protected platformId,\n    @Inject(NB_DOCUMENT) protected document,\n  ) {}\n\n  ngAfterContentInit() {\n    // In case option 'name' isn't set on nb-radio component,\n    // we need to set it's name right away, so it won't overlap with options\n    // without names from other radio groups. Otherwise they all would have\n    // same name and will be considered as options from one group so only the\n    // last option will stay selected.\n    this.updateNames();\n\n    this.radios.changes\n      .pipe(\n        startWith(this.radios),\n        // 'changes' emit during change detection run and we can't update\n        // option properties right of since they already was initialized.\n        // Instead we schedule microtask to update radios after change detection\n        // run is finished and trigger one more change detection run.\n        switchMap((radios: QueryList<NbRadioComponent>) => from(Promise.resolve(radios))),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(() => this.updateAndSubscribeToRadios());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  protected updateAndSubscribeToRadios() {\n    this.updateValueFromCheckedOption();\n    this.updateNames();\n    this.updateValues();\n    this.updateDisabled();\n    this.updateStatus();\n    this.subscribeOnRadiosValueChange();\n    this.subscribeOnRadiosBlur();\n  }\n\n  protected updateNames() {\n    if (this.radios) {\n      this.radios.forEach((radio: NbRadioComponent) => radio._setName(this.name));\n    }\n  }\n\n  protected updateValues() {\n    this.updateAndMarkForCheckRadios((radio: NbRadioComponent) => radio.checked = radio.value === this.value);\n  }\n\n  protected updateDisabled() {\n    if (typeof this.disabled !== 'undefined') {\n      this.updateAndMarkForCheckRadios((radio: NbRadioComponent) => radio.disabled = this.disabled);\n    }\n  }\n\n  protected subscribeOnRadiosValueChange() {\n    if (!this.radios || !this.radios.length) {\n      return;\n    }\n\n    merge(...this.radios.map((radio: NbRadioComponent) => radio.valueChange))\n      .pipe(\n        takeUntil(\n          merge(\n            this.radios.changes,\n            this.destroy$,\n          ),\n        ),\n      )\n      .subscribe((value: any) => {\n        this.writeValue(value);\n        this.propagateValue(value);\n      });\n  }\n\n  protected propagateValue(value: any) {\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  protected subscribeOnRadiosBlur() {\n    const hasNoRadios = !this.radios || !this.radios.length;\n    if (!isPlatformBrowser(this.platformId) || hasNoRadios) {\n      return;\n    }\n\n    const hostElement = this.hostElement.nativeElement;\n    fromEvent<Event>(hostElement, 'focusin')\n      .pipe(\n        filter(event => hostElement.contains(event.target as Node)),\n        switchMap(() => merge(\n          fromEvent<Event>(this.document, 'focusin'),\n          fromEvent<Event>(this.document, 'click'),\n        )),\n        filter(event => !hostElement.contains(event.target as Node)),\n        takeUntil(\n          merge(\n            this.radios.changes,\n            this.destroy$,\n          ),\n        ),\n      )\n      .subscribe(() => this.onTouched());\n  }\n\n  protected updateStatus() {\n    this.updateAndMarkForCheckRadios((radio: NbRadioComponent) => radio.status = this.status);\n  }\n\n  protected updateAndMarkForCheckRadios(updateFn: (NbRadioComponent) => void) {\n    if (this.radios) {\n      this.radios.forEach((radio) => {\n        updateFn(radio);\n        radio._markForCheck();\n      });\n    }\n  }\n\n  protected updateValueFromCheckedOption() {\n    const checkedRadio = this.radios.find((radio) => radio.checked);\n    const isValueMissing = this.value === undefined || this.value === null;\n    if (checkedRadio && isValueMissing && checkedRadio.value !== this.value) {\n      this.value = checkedRadio.value;\n    }\n  }\n}\n"]}