{"version":3,"file":"base-button.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/button/base-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  NgZone,\n  Renderer2,\n} from '@angular/core';\n\nimport { NbStatusService } from '../../services/status.service';\nimport { convertToBoolProperty, firstChildNotComment, lastChildNotComment, NbBooleanInput } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentOrCustomStatus } from '../component-status';\nimport { NbComponentShape } from '../component-shape';\n\nexport type NbButtonAppearance = 'filled' | 'outline' | 'ghost' | 'hero';\n\nexport type NbButtonProperties = Pick<NbButton, 'appearance' | 'size' | 'shape' | 'status' | 'disabled'> & Object;\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class NbButton implements AfterViewInit {\n  /**\n   * Button size, available sizes:\n   * `tiny`, `small`, `medium`, `large`, `giant`\n   */\n  @Input() size: NbComponentSize = 'medium';\n\n  /**\n   * Button status (adds specific styles):\n   * `primary`, `info`, `success`, `warning`, `danger`\n   */\n  @Input() status: NbComponentOrCustomStatus = 'basic';\n\n  /**\n   * Button shapes: `rectangle`, `round`, `semi-round`\n   */\n  @Input() shape: NbComponentShape = 'rectangle';\n\n  /**\n   * Button appearance: `filled`, `outline`, `ghost`, `hero`\n   */\n  @Input() appearance: NbButtonAppearance = 'filled';\n\n  /**\n   * Sets `filled` appearance\n   */\n  @Input()\n  @HostBinding('class.appearance-filled')\n  get filled(): boolean {\n    return this.appearance === 'filled';\n  }\n  set filled(value: boolean) {\n    if (convertToBoolProperty(value)) {\n      this.appearance = 'filled';\n    }\n  }\n  static ngAcceptInputType_filled: NbBooleanInput;\n\n  /**\n   * Sets `outline` appearance\n   */\n  @Input()\n  @HostBinding('class.appearance-outline')\n  get outline(): boolean {\n    return this.appearance === 'outline';\n  }\n  set outline(value: boolean) {\n    if (convertToBoolProperty(value)) {\n      this.appearance = 'outline';\n    }\n  }\n  static ngAcceptInputType_outline: NbBooleanInput;\n\n  /**\n   * Sets `ghost` appearance\n   */\n  @Input()\n  @HostBinding('class.appearance-ghost')\n  get ghost(): boolean {\n    return this.appearance === 'ghost';\n  }\n  set ghost(value: boolean) {\n    if (convertToBoolProperty(value)) {\n      this.appearance = 'ghost';\n    }\n  }\n  static ngAcceptInputType_ghost: NbBooleanInput;\n\n  /**\n   * If set element will fill its container\n   */\n  @Input()\n  @HostBinding('class.full-width')\n  get fullWidth(): boolean {\n    return this._fullWidth;\n  }\n  set fullWidth(value: boolean) {\n    this._fullWidth = convertToBoolProperty(value);\n  }\n  private _fullWidth = false;\n  static ngAcceptInputType_fullWidth: NbBooleanInput;\n\n  /**\n   * Disables the button\n   */\n  @Input()\n  @HostBinding('attr.aria-disabled')\n  @HostBinding('class.btn-disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (this.disabled !== convertToBoolProperty(value)) {\n      this._disabled = !this.disabled;\n      this.renderer.setProperty(this.hostElement.nativeElement, 'disabled', this.disabled);\n    }\n  }\n  private _disabled: boolean = false;\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Tabindex of the button.\n   */\n  @Input() tabIndex: number;\n\n  // issue #794\n  @HostBinding('attr.tabindex')\n  get tabbable(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    if (this.tabIndex == null) {\n      return '0';\n    }\n\n    return this.tabIndex.toString();\n  }\n\n  @HostBinding('class.size-tiny')\n  get tiny() {\n    return this.size === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small() {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium() {\n    return this.size === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant() {\n    return this.size === 'giant';\n  }\n\n  @HostBinding('class.shape-rectangle')\n  get rectangle() {\n    return this.shape === 'rectangle';\n  }\n\n  @HostBinding('class.shape-round')\n  get round() {\n    return this.shape === 'round';\n  }\n\n  @HostBinding('class.shape-semi-round')\n  get semiRound() {\n    return this.shape === 'semi-round';\n  }\n\n  @HostBinding('class.icon-start')\n  get iconLeft(): boolean {\n    const el = this.hostElement.nativeElement;\n    const icon = this.iconElement;\n    return !!(icon && firstChildNotComment(el) === icon);\n  }\n\n  @HostBinding('class.icon-end')\n  get iconRight(): boolean {\n    const el = this.hostElement.nativeElement;\n    const icon = this.iconElement;\n    return !!(icon && lastChildNotComment(el) === icon);\n  }\n\n  @HostBinding('class')\n  get additionalClasses(): string[] {\n    if (this.statusService.isCustomStatus(this.status)) {\n      return [this.statusService.getStatusClass(this.status)];\n    }\n    return [];\n  }\n\n  protected constructor(\n    protected renderer: Renderer2,\n    protected hostElement: ElementRef<HTMLElement>,\n    protected cd: ChangeDetectorRef,\n    protected zone: NgZone,\n    protected statusService: NbStatusService,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    // TODO: #2254\n    this.zone.runOutsideAngular(() => setTimeout(() => {\n      this.renderer.addClass(this.hostElement.nativeElement, 'nb-transition');\n    }));\n  }\n\n  /**\n   * @docs-private\n   **/\n  updateProperties(config: Partial<NbButtonProperties>) {\n    let isPropertyChanged = false;\n\n    for (const key in config) {\n      if (config.hasOwnProperty(key) && this[key] !== config[key]) {\n        this[key] = config[key];\n        isPropertyChanged = true;\n      }\n    }\n\n    if (isPropertyChanged) {\n      this.cd.markForCheck();\n    }\n  }\n\n  get iconElement() {\n    const el = this.hostElement.nativeElement;\n    return el.querySelector('nb-icon');\n  }\n}\n"]}