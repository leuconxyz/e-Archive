{"version":3,"file":"overlay-container.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/cdk/overlay/overlay-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  Input,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { NbPosition } from './overlay-position';\nimport { NbComponentPortal, NbPortalInjector, NbPortalOutletDirective, NbTemplatePortal } from './mapping';\n\nexport interface NbRenderableContainer {\n\n  /**\n   * A renderContent method renders content with provided context.\n   * Naturally, this job has to be done by ngOnChanges lifecycle hook, but\n   * ngOnChanges hook will be triggered only if we update content or context properties\n   * through template property binding syntax. But in our case we're updating these properties programmatically.\n   * */\n  renderContent();\n}\n\n@Component({\n  template: '',\n})\nexport class NbPositionedContainerComponent {\n  @Input() position: NbPosition;\n\n  @HostBinding('class.nb-overlay-top')\n  get top(): boolean {\n    return this.position === NbPosition.TOP;\n  }\n\n  @HostBinding('class.nb-overlay-top-start')\n  get topStart(): boolean {\n    return this.position === NbPosition.TOP_START;\n  }\n\n  @HostBinding('class.nb-overlay-top-end')\n  get topEnd(): boolean {\n    return this.position === NbPosition.TOP_END;\n  }\n\n  @HostBinding('class.nb-overlay-right')\n  get right(): boolean {\n    return this.position === NbPosition.RIGHT || this.position === NbPosition.END;\n  }\n\n  @HostBinding('class.nb-overlay-end-top')\n  get endTop(): boolean {\n    return this.position === NbPosition.END_TOP;\n  }\n\n  @HostBinding('class.nb-overlay-end-bottom')\n  get endBottom(): boolean {\n    return this.position === NbPosition.END_BOTTOM;\n  }\n\n  @HostBinding('class.nb-overlay-bottom')\n  get bottom(): boolean {\n    return this.position === NbPosition.BOTTOM;\n  }\n\n  @HostBinding('class.nb-overlay-bottom-start')\n  get bottomStart(): boolean {\n    return this.position === NbPosition.BOTTOM_START;\n  }\n\n  @HostBinding('class.nb-overlay-bottom-end')\n  get bottomEnd(): boolean {\n    return this.position === NbPosition.BOTTOM_END;\n  }\n\n  @HostBinding('class.nb-overlay-left')\n  get left(): boolean {\n    return this.position === NbPosition.LEFT || this.position === NbPosition.START;\n  }\n\n  @HostBinding('class.nb-overlay-start-top')\n  get startTop(): boolean {\n    return this.position === NbPosition.START_TOP;\n  }\n\n  @HostBinding('class.nb-overlay-start-bottom')\n  get startBottom(): boolean {\n    return this.position === NbPosition.START_BOTTOM;\n  }\n}\n\n\n@Component({\n  selector: 'nb-overlay-container',\n  template: `\n    <div *ngIf=\"isStringContent\" class=\"primitive-overlay\">{{ content }}</div>\n    <ng-template nbPortalOutlet></ng-template>\n  `,\n})\nexport class NbOverlayContainerComponent {\n\n  // TODO static must be false as of Angular 9.0.0, issues/1514\n  @ViewChild(NbPortalOutletDirective, { static: true }) portalOutlet: NbPortalOutletDirective;\n\n  isAttached: boolean = false;\n\n  content: string;\n\n  constructor(protected vcr: ViewContainerRef,\n              protected injector: Injector, private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  get isStringContent(): boolean {\n    return !!this.content;\n  }\n\n  attachComponentPortal<T>(portal: NbComponentPortal<T>, context?: Object): ComponentRef<T> {\n    portal.injector = this.createChildInjector(portal.componentFactoryResolver);\n    const componentRef = this.portalOutlet.attachComponentPortal(portal);\n    if (context) {\n      Object.assign(componentRef.instance, context);\n    }\n    componentRef.changeDetectorRef.markForCheck();\n    componentRef.changeDetectorRef.detectChanges();\n    this.isAttached = true;\n    return componentRef;\n  }\n\n  attachTemplatePortal<C>(portal: NbTemplatePortal<C>): EmbeddedViewRef<C> {\n    const templateRef = this.portalOutlet.attachTemplatePortal(portal);\n    templateRef.detectChanges();\n    this.isAttached = true;\n    return templateRef;\n  }\n\n  attachStringContent(content: string) {\n    this.content = content;\n    this.changeDetectorRef.markForCheck();\n    this.changeDetectorRef.detectChanges();\n    this.isAttached = true;\n  }\n\n  detach() {\n    if (this.portalOutlet.hasAttached()) {\n      this.portalOutlet.detach();\n    }\n    this.attachStringContent(null);\n    this.isAttached = false\n  }\n\n  protected createChildInjector(cfr: ComponentFactoryResolver): NbPortalInjector {\n    return new NbPortalInjector(this.injector, new WeakMap([\n      [ComponentFactoryResolver, cfr],\n    ]));\n  }\n}\n"]}