"use strict";
var core_1 = require('@angular/core');
var ɵngcc0 = require('@angular/core');
var ChartComponent = (function () {
    function ChartComponent(elementRef) {
        this.elementRef = elementRef;
    }
    ChartComponent.prototype.ngOnInit = function () {
        this.create();
    };
    ChartComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (this.chart) {
            if (changes['type'] || changes['options']) {
                this.create();
            }
            else if (changes['data']) {
                var currentValue_1 = changes['data'].currentValue;
                ['datasets', 'labels', 'xLabels', 'yLabels'].forEach(function (property) {
                    _this.chart.data[property] = currentValue_1[property];
                });
                this.chart.update();
            }
        }
    };
    ChartComponent.prototype.create = function () {
        if (this.canvas) {
            this.elementRef.nativeElement.removeChild(this.canvas);
        }
        this.canvas = document.createElement('canvas');
        this.elementRef.nativeElement.appendChild(this.canvas);
        this.chart = new Chart(this.canvas, {
            type: this.type,
            data: this.data,
            options: this.options
        });
    };
    ChartComponent.ctorParameters = function () { return [
        { type: core_1.ElementRef, },
    ]; };
    ChartComponent.propDecorators = {
        'type': [{ type: core_1.Input },],
        'data': [{ type: core_1.Input },],
        'options': [{ type: core_1.Input },],
    };
ChartComponent.ɵfac = function ChartComponent_Factory(t) { return new (t || ChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ChartComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ChartComponent, selectors: [["chart"]], inputs: { type: "type", data: "data", options: "options" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function ChartComponent_Template(rf, ctx) { }, styles: ["[_nghost-%COMP%] { display: block; }"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChartComponent, [{
        type: core_1.Component,
        args: [{
                selector: 'chart',
                template: '',
                styles: [':host { display: block; }']
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { type: [{
            type: core_1.Input
        }], data: [{
            type: core_1.Input
        }], options: [{
            type: core_1.Input
        }] }); })();
    return ChartComponent;
}());
exports.ChartComponent = ChartComponent;

//# sourceMappingURL=chart.component.js.map