{"version":3,"file":"leaflet.directive.d.ts","sources":["leaflet.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, NgZone, OnChanges, OnInit, SimpleChange } from '@angular/core';\nimport { LatLng, LatLngBounds, Map, MapOptions } from 'leaflet';\nexport declare class LeafletDirective implements OnChanges, OnInit {\n    private element;\n    private zone;\n    readonly DEFAULT_ZOOM: number;\n    readonly DEFAULT_CENTER: LatLng;\n    readonly DEFAULT_FPZ_OPTIONS: {};\n    resizeTimer: any;\n    map: Map;\n    fitBoundsOptions: {};\n    panOptions: {};\n    zoomOptions: {};\n    zoomPanOptions: {};\n    options: MapOptions;\n    mapReady: EventEmitter<Map>;\n    zoom: number;\n    center: LatLng;\n    fitBounds: LatLngBounds;\n    constructor(element: ElementRef, zone: NgZone);\n    ngOnInit(): void;\n    ngOnChanges(changes: {\n        [key: string]: SimpleChange;\n    }): void;\n    getMap(): Map;\n    onResize(): void;\n    /**\n     * Resize the map to fit it's parent container\n     */\n    private doResize();\n    /**\n     * Manage a delayed resize of the component\n     */\n    private delayResize();\n    /**\n     * Set the view (center/zoom) all at once\n     * @param center The new center\n     * @param zoom The new zoom level\n     */\n    private setView(center, zoom);\n    /**\n     * Set the map zoom level\n     * @param zoom the new zoom level for the map\n     */\n    private setZoom(zoom);\n    /**\n     * Set the center of the map\n     * @param center the center point\n     */\n    private setCenter(center);\n    /**\n     * Fit the map to the bounds\n     * @param center the center point\n     */\n    private setFitBounds(latLngBounds);\n}\n"]}