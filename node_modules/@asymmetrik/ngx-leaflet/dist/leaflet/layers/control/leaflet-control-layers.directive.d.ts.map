{"version":3,"file":"leaflet-control-layers.directive.d.ts","sources":["leaflet-control-layers.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DoCheck, KeyValueDiffer, KeyValueDiffers, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Layer } from 'leaflet';\nimport { LeafletDirective } from '../../core/leaflet.directive';\nimport { LeafletControlLayersConfig } from './leaflet-control-layers-config.model';\n/**\n * Layers Control\n *\n * This directive is used to configure the layers control. The input accepts an object with two\n * key-value maps of layer name -> layer. Mutable changes are detected. On changes, a differ is\n * used to determine what changed so that layers are appropriately added or removed.\n *\n * To specify which layer to show as the 'active' baselayer, you will want to add it to the map\n * using the layers directive. Otherwise, the last one it sees will be used.\n */\nexport declare class LeafletLayersControlDirective implements DoCheck, OnDestroy, OnInit {\n    private differs;\n    private zone;\n    layersControlConfigValue: LeafletControlLayersConfig;\n    baseLayersDiffer: KeyValueDiffer<string, Layer>;\n    overlaysDiffer: KeyValueDiffer<string, Layer>;\n    layersControlConfig: LeafletControlLayersConfig;\n    layersControlOptions: any;\n    private controlLayers;\n    private leafletDirective;\n    constructor(leafletDirective: LeafletDirective, differs: KeyValueDiffers, zone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngDoCheck(): void;\n    protected updateLayers(): void;\n}\n"]}