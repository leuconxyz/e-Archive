{"version":3,"file":"leaflet-layers.directive.d.ts","sources":["leaflet-layers.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DoCheck, IterableDiffer, IterableDiffers, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Layer } from 'leaflet';\nimport { LeafletDirective } from '../core/leaflet.directive';\n/**\n * Layers directive\n *\n * This directive is used to directly control map layers. As changes are made to the input array of\n * layers, the map is synched to the array. As layers are added or removed from the input array, they\n * are also added or removed from the map. The input array is treated as immutable. To detect changes,\n * you must change the array instance.\n *\n * Important Note: The input layers array is assumed to be immutable. This means you need to use an\n * immutable array implementation or create a new copy of your array when you make changes, otherwise\n * this directive won't detect the change. This is by design. It's for performance reasons. Change\n * detection of mutable arrays requires diffing the state of the array on every DoCheck cycle, which\n * is extremely expensive from a time complexity perspective.\n *\n */\nexport declare class LeafletLayersDirective implements DoCheck, OnDestroy, OnInit {\n    private differs;\n    private zone;\n    layersValue: Layer[];\n    layersDiffer: IterableDiffer<Layer>;\n    layers: Layer[];\n    private leafletDirective;\n    constructor(leafletDirective: LeafletDirective, differs: IterableDiffers, zone: NgZone);\n    ngDoCheck(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Update the state of the layers.\n     * We use an iterable differ to synchronize the map layers with the state of the bound layers array.\n     * This is important because it allows us to react to changes to the contents of the array as well\n     * as changes to the actual array instance.\n     */\n    private updateLayers();\n}\n"]}